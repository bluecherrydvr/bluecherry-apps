/* soapStub.h
   Generated by gSOAP 2.8.4 from ONVIF/media/media.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"http://www.onvif.org/ver10/media/wsdl"
#define SOAP_NAMESPACE_OF_ns2	"http://www.onvif.org/ver10/schema"
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_wsu__tTimestampFault
#define SOAP_TYPE_wsu__tTimestampFault (7)
/* wsu:tTimestampFault */
enum wsu__tTimestampFault {wsu__MessageExpired = 0};
typedef enum wsu__tTimestampFault wsu__tTimestampFault;
#endif

#ifndef SOAP_TYPE_wsse__FaultcodeEnum
#define SOAP_TYPE_wsse__FaultcodeEnum (9)
/* wsse:FaultcodeEnum */
enum wsse__FaultcodeEnum {wsse__UnsupportedSecurityToken = 0, wsse__UnsupportedAlgorithm = 1, wsse__InvalidSecurity = 2, wsse__InvalidSecurityToken = 3, wsse__FailedAuthentication = 4, wsse__FailedCheck = 5, wsse__SecurityTokenUnavailable = 6};
typedef enum wsse__FaultcodeEnum wsse__FaultcodeEnum;
#endif

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (96)
/* xsd:boolean */
enum xsd__boolean {xsd__boolean__false_ = 0, xsd__boolean__true_ = 1};
#endif

#ifndef SOAP_TYPE_ns2__UserLevel
#define SOAP_TYPE_ns2__UserLevel (103)
/* ns2:UserLevel */
enum ns2__UserLevel {ns2__UserLevel__Administrator = 0, ns2__UserLevel__Operator = 1, ns2__UserLevel__User = 2, ns2__UserLevel__Anonymous = 3, ns2__UserLevel__Extended = 4};
#endif

#ifndef SOAP_TYPE_ns2__VideoEncoding
#define SOAP_TYPE_ns2__VideoEncoding (106)
/* ns2:VideoEncoding */
enum ns2__VideoEncoding {ns2__VideoEncoding__JPEG = 0, ns2__VideoEncoding__MPEG4 = 1, ns2__VideoEncoding__H264 = 2};
#endif

#ifndef SOAP_TYPE_ns2__Mpeg4Profile
#define SOAP_TYPE_ns2__Mpeg4Profile (107)
/* ns2:Mpeg4Profile */
enum ns2__Mpeg4Profile {ns2__Mpeg4Profile__SP = 0, ns2__Mpeg4Profile__ASP = 1};
#endif

#ifndef SOAP_TYPE_ns2__H264Profile
#define SOAP_TYPE_ns2__H264Profile (108)
/* ns2:H264Profile */
enum ns2__H264Profile {ns2__H264Profile__Baseline = 0, ns2__H264Profile__Main = 1, ns2__H264Profile__Extended = 2, ns2__H264Profile__High = 3};
#endif

#ifndef SOAP_TYPE_ns2__AudioEncoding
#define SOAP_TYPE_ns2__AudioEncoding (109)
/* ns2:AudioEncoding */
enum ns2__AudioEncoding {ns2__AudioEncoding__G711 = 0, ns2__AudioEncoding__G726 = 1, ns2__AudioEncoding__AAC = 2};
#endif

#ifndef SOAP_TYPE_ns2__StreamType
#define SOAP_TYPE_ns2__StreamType (110)
/* ns2:StreamType */
enum ns2__StreamType {ns2__StreamType__RTP_Unicast = 0, ns2__StreamType__RTP_Multicast = 1};
#endif

#ifndef SOAP_TYPE_ns2__TransportProtocol
#define SOAP_TYPE_ns2__TransportProtocol (111)
/* ns2:TransportProtocol */
enum ns2__TransportProtocol {ns2__TransportProtocol__UDP = 0, ns2__TransportProtocol__TCP = 1, ns2__TransportProtocol__RTSP = 2, ns2__TransportProtocol__HTTP = 3};
#endif

#ifndef SOAP_TYPE_ns2__ScopeDefinition
#define SOAP_TYPE_ns2__ScopeDefinition (112)
/* ns2:ScopeDefinition */
enum ns2__ScopeDefinition {ns2__ScopeDefinition__Fixed = 0, ns2__ScopeDefinition__Configurable = 1};
#endif

#ifndef SOAP_TYPE_ns2__DiscoveryMode
#define SOAP_TYPE_ns2__DiscoveryMode (113)
/* ns2:DiscoveryMode */
enum ns2__DiscoveryMode {ns2__DiscoveryMode__Discoverable = 0, ns2__DiscoveryMode__NonDiscoverable = 1};
#endif

#ifndef SOAP_TYPE_ns2__Duplex
#define SOAP_TYPE_ns2__Duplex (114)
/* ns2:Duplex */
enum ns2__Duplex {ns2__Duplex__Full = 0, ns2__Duplex__Half = 1};
#endif

#ifndef SOAP_TYPE_ns2__IPv6DHCPConfiguration
#define SOAP_TYPE_ns2__IPv6DHCPConfiguration (116)
/* ns2:IPv6DHCPConfiguration */
enum ns2__IPv6DHCPConfiguration {ns2__IPv6DHCPConfiguration__Auto = 0, ns2__IPv6DHCPConfiguration__Stateful = 1, ns2__IPv6DHCPConfiguration__Stateless = 2, ns2__IPv6DHCPConfiguration__Off = 3};
#endif

#ifndef SOAP_TYPE_ns2__NetworkProtocolType
#define SOAP_TYPE_ns2__NetworkProtocolType (117)
/* ns2:NetworkProtocolType */
enum ns2__NetworkProtocolType {ns2__NetworkProtocolType__HTTP = 0, ns2__NetworkProtocolType__HTTPS = 1, ns2__NetworkProtocolType__RTSP = 2};
#endif

#ifndef SOAP_TYPE_ns2__NetworkHostType
#define SOAP_TYPE_ns2__NetworkHostType (118)
/* ns2:NetworkHostType */
enum ns2__NetworkHostType {ns2__NetworkHostType__IPv4 = 0, ns2__NetworkHostType__IPv6 = 1, ns2__NetworkHostType__DNS = 2};
#endif

#ifndef SOAP_TYPE_ns2__IPType
#define SOAP_TYPE_ns2__IPType (122)
/* ns2:IPType */
enum ns2__IPType {ns2__IPType__IPv4 = 0, ns2__IPType__IPv6 = 1};
#endif

#ifndef SOAP_TYPE_ns2__IPAddressFilterType
#define SOAP_TYPE_ns2__IPAddressFilterType (125)
/* ns2:IPAddressFilterType */
enum ns2__IPAddressFilterType {ns2__IPAddressFilterType__Allow = 0, ns2__IPAddressFilterType__Deny = 1};
#endif

#ifndef SOAP_TYPE_ns2__DynamicDNSType
#define SOAP_TYPE_ns2__DynamicDNSType (126)
/* ns2:DynamicDNSType */
enum ns2__DynamicDNSType {ns2__DynamicDNSType__NoUpdate = 0, ns2__DynamicDNSType__ClientUpdates = 1, ns2__DynamicDNSType__ServerUpdates = 2};
#endif

#ifndef SOAP_TYPE_ns2__CapabilityCategory
#define SOAP_TYPE_ns2__CapabilityCategory (127)
/* ns2:CapabilityCategory */
enum ns2__CapabilityCategory {ns2__CapabilityCategory__All = 0, ns2__CapabilityCategory__Analytics = 1, ns2__CapabilityCategory__Device = 2, ns2__CapabilityCategory__Events = 3, ns2__CapabilityCategory__Imaging = 4, ns2__CapabilityCategory__Media = 5, ns2__CapabilityCategory__PTZ = 6};
#endif

#ifndef SOAP_TYPE_ns2__SystemLogType
#define SOAP_TYPE_ns2__SystemLogType (128)
/* ns2:SystemLogType */
enum ns2__SystemLogType {ns2__SystemLogType__System = 0, ns2__SystemLogType__Access = 1};
#endif

#ifndef SOAP_TYPE_ns2__FactoryDefaultType
#define SOAP_TYPE_ns2__FactoryDefaultType (129)
/* ns2:FactoryDefaultType */
enum ns2__FactoryDefaultType {ns2__FactoryDefaultType__Hard = 0, ns2__FactoryDefaultType__Soft = 1};
#endif

#ifndef SOAP_TYPE_ns2__SetDateTimeType
#define SOAP_TYPE_ns2__SetDateTimeType (130)
/* ns2:SetDateTimeType */
enum ns2__SetDateTimeType {ns2__SetDateTimeType__Manual = 0, ns2__SetDateTimeType__NTP = 1};
#endif

#ifndef SOAP_TYPE_ns2__RelayLogicalState
#define SOAP_TYPE_ns2__RelayLogicalState (131)
/* ns2:RelayLogicalState */
enum ns2__RelayLogicalState {ns2__RelayLogicalState__active = 0, ns2__RelayLogicalState__inactive = 1};
#endif

#ifndef SOAP_TYPE_ns2__RelayIdleState
#define SOAP_TYPE_ns2__RelayIdleState (132)
/* ns2:RelayIdleState */
enum ns2__RelayIdleState {ns2__RelayIdleState__closed = 0, ns2__RelayIdleState__open = 1};
#endif

#ifndef SOAP_TYPE_ns2__RelayMode
#define SOAP_TYPE_ns2__RelayMode (133)
/* ns2:RelayMode */
enum ns2__RelayMode {ns2__RelayMode__Monostable = 0, ns2__RelayMode__Bistable = 1};
#endif

#ifndef SOAP_TYPE_ns2__MoveStatus
#define SOAP_TYPE_ns2__MoveStatus (135)
/* ns2:MoveStatus */
enum ns2__MoveStatus {ns2__MoveStatus__IDLE = 0, ns2__MoveStatus__MOVING = 1, ns2__MoveStatus__UNKNOWN = 2};
#endif

#ifndef SOAP_TYPE_ns2__AutoFocusMode
#define SOAP_TYPE_ns2__AutoFocusMode (136)
/* ns2:AutoFocusMode */
enum ns2__AutoFocusMode {ns2__AutoFocusMode__AUTO = 0, ns2__AutoFocusMode__MANUAL = 1};
#endif

#ifndef SOAP_TYPE_ns2__WideDynamicMode
#define SOAP_TYPE_ns2__WideDynamicMode (137)
/* ns2:WideDynamicMode */
enum ns2__WideDynamicMode {ns2__WideDynamicMode__OFF = 0, ns2__WideDynamicMode__ON = 1};
#endif

#ifndef SOAP_TYPE_ns2__BacklightCompensationMode
#define SOAP_TYPE_ns2__BacklightCompensationMode (138)
/* ns2:BacklightCompensationMode */
enum ns2__BacklightCompensationMode {ns2__BacklightCompensationMode__OFF = 0, ns2__BacklightCompensationMode__ON = 1};
#endif

#ifndef SOAP_TYPE_ns2__ExposurePriority
#define SOAP_TYPE_ns2__ExposurePriority (139)
/* ns2:ExposurePriority */
enum ns2__ExposurePriority {ns2__ExposurePriority__LowNoise = 0, ns2__ExposurePriority__FrameRate = 1};
#endif

#ifndef SOAP_TYPE_ns2__ExposureMode
#define SOAP_TYPE_ns2__ExposureMode (140)
/* ns2:ExposureMode */
enum ns2__ExposureMode {ns2__ExposureMode__AUTO = 0, ns2__ExposureMode__MANUAL = 1};
#endif

#ifndef SOAP_TYPE_ns2__Enabled
#define SOAP_TYPE_ns2__Enabled (141)
/* ns2:Enabled */
enum ns2__Enabled {ns2__Enabled__ENABLED = 0, ns2__Enabled__DISABLED = 1};
#endif

#ifndef SOAP_TYPE_ns2__WhiteBalanceMode
#define SOAP_TYPE_ns2__WhiteBalanceMode (142)
/* ns2:WhiteBalanceMode */
enum ns2__WhiteBalanceMode {ns2__WhiteBalanceMode__AUTO = 0, ns2__WhiteBalanceMode__MANUAL = 1};
#endif

#ifndef SOAP_TYPE_ns2__IrCutFilterMode
#define SOAP_TYPE_ns2__IrCutFilterMode (143)
/* ns2:IrCutFilterMode */
enum ns2__IrCutFilterMode {ns2__IrCutFilterMode__ON = 0, ns2__IrCutFilterMode__OFF = 1, ns2__IrCutFilterMode__AUTO = 2};
#endif

#ifndef SOAP_TYPE_ns2__PropertyOperation
#define SOAP_TYPE_ns2__PropertyOperation (145)
/* ns2:PropertyOperation */
enum ns2__PropertyOperation {ns2__PropertyOperation__Initialized = 0, ns2__PropertyOperation__Deleted = 1, ns2__PropertyOperation__Changed = 2};
#endif

#ifndef SOAP_TYPE_ns2__Direction
#define SOAP_TYPE_ns2__Direction (146)
/* ns2:Direction */
enum ns2__Direction {ns2__Direction__Left = 0, ns2__Direction__Right = 1, ns2__Direction__Any = 2};
#endif

#ifndef SOAP_TYPE_ns2__ClassType
#define SOAP_TYPE_ns2__ClassType (147)
/* ns2:ClassType */
enum ns2__ClassType {ns2__ClassType__Animal = 0, ns2__ClassType__Face = 1, ns2__ClassType__Human = 2, ns2__ClassType__Vehical = 3, ns2__ClassType__Other = 4};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (100)
typedef LONG64 xsd__duration;
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__wsu__Timestamp
#define SOAP_TYPE__wsu__Timestamp (8)
/* wsu:Timestamp */
struct _wsu__Timestamp
{
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *Created;	/* optional element of type xsd:string */
	char *Expires;	/* optional element of type xsd:string */
};
typedef struct _wsu__Timestamp _wsu__Timestamp;
#endif

#ifndef SOAP_TYPE__wsse__UsernameToken
#define SOAP_TYPE__wsse__UsernameToken (10)
/* wsse:UsernameToken */
struct _wsse__UsernameToken
{
	char *Username;	/* optional element of type xsd:string */
	struct _wsse__Password *Password;	/* optional element of type wsse:Password */
	char *Nonce;	/* optional element of type xsd:string */
	char *wsu__Created;	/* optional element of type xsd:string */
	char *wsu__Id;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__UsernameToken _wsse__UsernameToken;
#endif

#ifndef SOAP_TYPE__wsse__BinarySecurityToken
#define SOAP_TYPE__wsse__BinarySecurityToken (13)
/* Primitive wsse:BinarySecurityToken schema type: */
struct _wsse__BinarySecurityToken
{
	char *__item;
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
	char *EncodingType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__BinarySecurityToken _wsse__BinarySecurityToken;
#endif

#ifndef SOAP_TYPE__wsse__Reference
#define SOAP_TYPE__wsse__Reference (14)
/* wsse:Reference */
struct _wsse__Reference
{
	char *URI;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Reference _wsse__Reference;
#endif

#ifndef SOAP_TYPE__wsse__Embedded
#define SOAP_TYPE__wsse__Embedded (15)
/* wsse:Embedded */
struct _wsse__Embedded
{
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Embedded _wsse__Embedded;
#endif

#ifndef SOAP_TYPE__wsse__KeyIdentifier
#define SOAP_TYPE__wsse__KeyIdentifier (16)
/* Primitive wsse:KeyIdentifier schema type: */
struct _wsse__KeyIdentifier
{
	char *__item;
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *ValueType;	/* optional attribute of type xsd:string */
	char *EncodingType;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__KeyIdentifier _wsse__KeyIdentifier;
#endif

#ifndef SOAP_TYPE__wsse__SecurityTokenReference
#define SOAP_TYPE__wsse__SecurityTokenReference (17)
/* wsse:SecurityTokenReference */
struct _wsse__SecurityTokenReference
{
	struct _wsse__Reference *Reference;	/* optional element of type wsse:Reference */
	struct _wsse__KeyIdentifier *KeyIdentifier;	/* optional element of type wsse:KeyIdentifier */
	struct _wsse__Embedded *Embedded;	/* optional element of type wsse:Embedded */
	char *wsu__Id;	/* optional attribute of type xsd:string */
	char *Usage;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__SecurityTokenReference _wsse__SecurityTokenReference;
#endif

#ifndef SOAP_TYPE_ds__SignatureType
#define SOAP_TYPE_ds__SignatureType (21)
/* ds:SignatureType */
struct ds__SignatureType
{
	struct ds__SignedInfoType *SignedInfo;	/* optional element of type ds:SignedInfoType */
	char *SignatureValue;	/* optional element of type xsd:string */
	struct ds__KeyInfoType *KeyInfo;	/* optional element of type ds:KeyInfoType */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct ds__SignatureType ds__SignatureType;
#endif

#ifndef SOAP_TYPE__c14n__InclusiveNamespaces
#define SOAP_TYPE__c14n__InclusiveNamespaces (31)
/* c14n:InclusiveNamespaces */
struct _c14n__InclusiveNamespaces
{
	char *PrefixList;	/* optional attribute of type xsd:string */
};
typedef struct _c14n__InclusiveNamespaces _c14n__InclusiveNamespaces;
#endif

#ifndef SOAP_TYPE_ds__TransformType
#define SOAP_TYPE_ds__TransformType (32)
/* ds:TransformType */
struct ds__TransformType
{
	struct _c14n__InclusiveNamespaces *c14n__InclusiveNamespaces;	/* optional element of type c14n:InclusiveNamespaces */
	char *__any;
	char *Algorithm;	/* optional attribute of type xsd:string */
};
typedef struct ds__TransformType ds__TransformType;
#endif

#ifndef SOAP_TYPE_ds__KeyInfoType
#define SOAP_TYPE_ds__KeyInfoType (24)
/* ds:KeyInfoType */
struct ds__KeyInfoType
{
	char *KeyName;	/* optional element of type xsd:string */
	struct ds__KeyValueType *KeyValue;	/* optional element of type ds:KeyValueType */
	struct ds__RetrievalMethodType *RetrievalMethod;	/* optional element of type ds:RetrievalMethodType */
	struct ds__X509DataType *X509Data;	/* optional element of type ds:X509DataType */
	struct _wsse__SecurityTokenReference *wsse__SecurityTokenReference;	/* optional element of type wsse:SecurityTokenReference */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct ds__KeyInfoType ds__KeyInfoType;
#endif

#ifndef SOAP_TYPE_ds__SignedInfoType
#define SOAP_TYPE_ds__SignedInfoType (22)
/* ds:SignedInfoType */
struct ds__SignedInfoType
{
	struct ds__CanonicalizationMethodType *CanonicalizationMethod;	/* required element of type ds:CanonicalizationMethodType */
	struct ds__SignatureMethodType *SignatureMethod;	/* required element of type ds:SignatureMethodType */
	int __sizeReference;	/* sequence of elements <Reference> */
	struct ds__ReferenceType **Reference;	/* required element of type ds:ReferenceType */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct ds__SignedInfoType ds__SignedInfoType;
#endif

#ifndef SOAP_TYPE_ds__CanonicalizationMethodType
#define SOAP_TYPE_ds__CanonicalizationMethodType (27)
/* ds:CanonicalizationMethodType */
struct ds__CanonicalizationMethodType
{
	char *Algorithm;	/* required attribute of type xsd:string */
	struct _c14n__InclusiveNamespaces *c14n__InclusiveNamespaces;	/* optional element of type c14n:InclusiveNamespaces */
};
typedef struct ds__CanonicalizationMethodType ds__CanonicalizationMethodType;
#endif

#ifndef SOAP_TYPE_ds__SignatureMethodType
#define SOAP_TYPE_ds__SignatureMethodType (28)
/* ds:SignatureMethodType */
struct ds__SignatureMethodType
{
	int *HMACOutputLength;	/* optional element of type xsd:int */
	char *Algorithm;	/* required attribute of type xsd:string */
};
typedef struct ds__SignatureMethodType ds__SignatureMethodType;
#endif

#ifndef SOAP_TYPE_ds__ReferenceType
#define SOAP_TYPE_ds__ReferenceType (29)
/* ds:ReferenceType */
struct ds__ReferenceType
{
	struct ds__TransformsType *Transforms;	/* optional element of type ds:TransformsType */
	struct ds__DigestMethodType *DigestMethod;	/* required element of type ds:DigestMethodType */
	char *DigestValue;	/* required element of type xsd:string */
	char *Id;	/* optional attribute of type xsd:string */
	char *URI;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
};
typedef struct ds__ReferenceType ds__ReferenceType;
#endif

#ifndef SOAP_TYPE_ds__TransformsType
#define SOAP_TYPE_ds__TransformsType (30)
/* ds:TransformsType */
struct ds__TransformsType
{
	int __sizeTransform;	/* sequence of elements <Transform> */
	struct ds__TransformType *Transform;	/* required element of type ds:TransformType */
};
typedef struct ds__TransformsType ds__TransformsType;
#endif

#ifndef SOAP_TYPE_ds__DigestMethodType
#define SOAP_TYPE_ds__DigestMethodType (35)
/* ds:DigestMethodType */
struct ds__DigestMethodType
{
	char *Algorithm;	/* required attribute of type xsd:string */
};
typedef struct ds__DigestMethodType ds__DigestMethodType;
#endif

#ifndef SOAP_TYPE_ds__KeyValueType
#define SOAP_TYPE_ds__KeyValueType (36)
/* ds:KeyValueType */
struct ds__KeyValueType
{
	struct ds__DSAKeyValueType *DSAKeyValue;	/* required element of type ds:DSAKeyValueType */
	struct ds__RSAKeyValueType *RSAKeyValue;	/* required element of type ds:RSAKeyValueType */
};
typedef struct ds__KeyValueType ds__KeyValueType;
#endif

#ifndef SOAP_TYPE_ds__RetrievalMethodType
#define SOAP_TYPE_ds__RetrievalMethodType (38)
/* ds:RetrievalMethodType */
struct ds__RetrievalMethodType
{
	struct ds__TransformsType *Transforms;	/* optional element of type ds:TransformsType */
	char *URI;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
};
typedef struct ds__RetrievalMethodType ds__RetrievalMethodType;
#endif

#ifndef SOAP_TYPE_ds__X509DataType
#define SOAP_TYPE_ds__X509DataType (40)
/* ds:X509DataType */
struct ds__X509DataType
{
	struct ds__X509IssuerSerialType *X509IssuerSerial;	/* required element of type ds:X509IssuerSerialType */
	char *X509SKI;	/* required element of type xsd:string */
	char *X509SubjectName;	/* required element of type xsd:string */
	char *X509Certificate;	/* required element of type xsd:string */
	char *X509CRL;	/* required element of type xsd:string */
};
typedef struct ds__X509DataType ds__X509DataType;
#endif

#ifndef SOAP_TYPE_ds__X509IssuerSerialType
#define SOAP_TYPE_ds__X509IssuerSerialType (44)
/* ds:X509IssuerSerialType */
struct ds__X509IssuerSerialType
{
	char *X509IssuerName;	/* required element of type xsd:string */
	int X509SerialNumber;	/* required element of type xsd:int */
};
typedef struct ds__X509IssuerSerialType ds__X509IssuerSerialType;
#endif

#ifndef SOAP_TYPE_ds__DSAKeyValueType
#define SOAP_TYPE_ds__DSAKeyValueType (45)
/* ds:DSAKeyValueType */
struct ds__DSAKeyValueType
{
	char *G;	/* optional element of type xsd:string */
	char *Y;	/* required element of type xsd:string */
	char *J;	/* optional element of type xsd:string */
	char *P;	/* required element of type xsd:string */
	char *Q;	/* required element of type xsd:string */
	char *Seed;	/* required element of type xsd:string */
	char *PgenCounter;	/* required element of type xsd:string */
};
typedef struct ds__DSAKeyValueType ds__DSAKeyValueType;
#endif

#ifndef SOAP_TYPE_ds__RSAKeyValueType
#define SOAP_TYPE_ds__RSAKeyValueType (46)
/* ds:RSAKeyValueType */
struct ds__RSAKeyValueType
{
	char *Modulus;	/* required element of type xsd:string */
	char *Exponent;	/* required element of type xsd:string */
};
typedef struct ds__RSAKeyValueType ds__RSAKeyValueType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptionPropertyType
#define SOAP_TYPE_xenc__EncryptionPropertyType (68)
/* xenc:EncryptionPropertyType */
struct xenc__EncryptionPropertyType
{
	char *Target;	/* optional attribute of type xsd:string */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct xenc__EncryptionPropertyType xenc__EncryptionPropertyType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptedType
#define SOAP_TYPE_xenc__EncryptedType (58)
/* xenc:EncryptedType */
struct xenc__EncryptedType
{
	struct xenc__EncryptionMethodType *EncryptionMethod;	/* optional element of type xenc:EncryptionMethodType */
	struct ds__KeyInfoType *ds__KeyInfo;	/* optional element of type ds:KeyInfo */
	struct xenc__CipherDataType *CipherData;	/* required element of type xenc:CipherDataType */
	struct xenc__EncryptionPropertiesType *EncryptionProperties;	/* optional element of type xenc:EncryptionPropertiesType */
	char *Id;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
	char *MimeType;	/* optional attribute of type xsd:string */
	char *Encoding;	/* optional attribute of type xsd:string */
};
typedef struct xenc__EncryptedType xenc__EncryptedType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptionMethodType
#define SOAP_TYPE_xenc__EncryptionMethodType (59)
/* xenc:EncryptionMethodType */
struct xenc__EncryptionMethodType
{
	int *KeySize;	/* optional element of type xsd:int */
	char *OAEPparams;	/* optional element of type xsd:string */
	char *Algorithm;	/* required attribute of type xsd:string */
	char *__mixed;
};
typedef struct xenc__EncryptionMethodType xenc__EncryptionMethodType;
#endif

#ifndef SOAP_TYPE_xenc__CipherDataType
#define SOAP_TYPE_xenc__CipherDataType (60)
/* xenc:CipherDataType */
struct xenc__CipherDataType
{
	char *CipherValue;	/* optional element of type xsd:string */
	struct xenc__CipherReferenceType *CipherReference;	/* optional element of type xenc:CipherReferenceType */
};
typedef struct xenc__CipherDataType xenc__CipherDataType;
#endif

#ifndef SOAP_TYPE_xenc__CipherReferenceType
#define SOAP_TYPE_xenc__CipherReferenceType (61)
/* xenc:CipherReferenceType */
struct xenc__CipherReferenceType
{
	struct xenc__TransformsType *Transforms;	/* optional element of type xenc:TransformsType */
	char *URI;	/* required attribute of type xsd:string */
};
typedef struct xenc__CipherReferenceType xenc__CipherReferenceType;
#endif

#ifndef SOAP_TYPE_xenc__TransformsType
#define SOAP_TYPE_xenc__TransformsType (62)
/* xenc:TransformsType */
struct xenc__TransformsType
{
	struct ds__TransformType ds__Transform;	/* required element of type ds:Transform */
};
typedef struct xenc__TransformsType xenc__TransformsType;
#endif

#ifndef SOAP_TYPE_xenc__AgreementMethodType
#define SOAP_TYPE_xenc__AgreementMethodType (65)
/* xenc:AgreementMethodType */
struct xenc__AgreementMethodType
{
	char *KA_Nonce;	/* optional element of type xsd:string */
	struct ds__KeyInfoType *OriginatorKeyInfo;	/* optional element of type ds:KeyInfoType */
	struct ds__KeyInfoType *RecipientKeyInfo;	/* optional element of type ds:KeyInfoType */
	char *Algorithm;	/* required attribute of type xsd:string */
	char *__mixed;
};
typedef struct xenc__AgreementMethodType xenc__AgreementMethodType;
#endif

#ifndef SOAP_TYPE_xenc__ReferenceType
#define SOAP_TYPE_xenc__ReferenceType (66)
/* xenc:ReferenceType */
struct xenc__ReferenceType
{
	char *URI;	/* required attribute of type xsd:string */
};
typedef struct xenc__ReferenceType xenc__ReferenceType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptionPropertiesType
#define SOAP_TYPE_xenc__EncryptionPropertiesType (67)
/* xenc:EncryptionPropertiesType */
struct xenc__EncryptionPropertiesType
{
	int __sizeEncryptionProperty;	/* sequence of elements <EncryptionProperty> */
	struct xenc__EncryptionPropertyType *EncryptionProperty;	/* required element of type xenc:EncryptionPropertyType */
	char *Id;	/* optional attribute of type xsd:string */
};
typedef struct xenc__EncryptionPropertiesType xenc__EncryptionPropertiesType;
#endif

#ifndef SOAP_TYPE___xenc__union_ReferenceList
#define SOAP_TYPE___xenc__union_ReferenceList (77)
/* Operation wrapper: */
struct __xenc__union_ReferenceList
{
	struct xenc__ReferenceType *DataReference;	/* optional element of type xenc:ReferenceType */
	struct xenc__ReferenceType *KeyReference;	/* optional element of type xenc:ReferenceType */
};
#endif

#ifndef SOAP_TYPE__xenc__ReferenceList
#define SOAP_TYPE__xenc__ReferenceList (69)
/* xenc:ReferenceList */
struct _xenc__ReferenceList
{
	int __size_ReferenceList;	/* sequence of elements <-union-ReferenceList> */
	struct __xenc__union_ReferenceList *__union_ReferenceList;
};
typedef struct _xenc__ReferenceList _xenc__ReferenceList;
#endif

#ifndef SOAP_TYPE_xenc__EncryptedDataType
#define SOAP_TYPE_xenc__EncryptedDataType (63)
/* xenc:EncryptedDataType */
struct xenc__EncryptedDataType
{
	struct xenc__EncryptionMethodType *EncryptionMethod;	/* optional element of type xenc:EncryptionMethodType */
	struct ds__KeyInfoType *ds__KeyInfo;	/* optional element of type ds:KeyInfo */
	struct xenc__CipherDataType *CipherData;	/* required element of type xenc:CipherDataType */
	struct xenc__EncryptionPropertiesType *EncryptionProperties;	/* optional element of type xenc:EncryptionPropertiesType */
	char *Id;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
	char *MimeType;	/* optional attribute of type xsd:string */
	char *Encoding;	/* optional attribute of type xsd:string */
};
typedef struct xenc__EncryptedDataType xenc__EncryptedDataType;
#endif

#ifndef SOAP_TYPE_xenc__EncryptedKeyType
#define SOAP_TYPE_xenc__EncryptedKeyType (64)
/* xenc:EncryptedKeyType */
struct xenc__EncryptedKeyType
{
	struct xenc__EncryptionMethodType *EncryptionMethod;	/* optional element of type xenc:EncryptionMethodType */
	struct ds__KeyInfoType *ds__KeyInfo;	/* optional element of type ds:KeyInfo */
	struct xenc__CipherDataType *CipherData;	/* required element of type xenc:CipherDataType */
	struct xenc__EncryptionPropertiesType *EncryptionProperties;	/* optional element of type xenc:EncryptionPropertiesType */
	char *Id;	/* optional attribute of type xsd:string */
	char *Type;	/* optional attribute of type xsd:string */
	char *MimeType;	/* optional attribute of type xsd:string */
	char *Encoding;	/* optional attribute of type xsd:string */
	struct _xenc__ReferenceList *ReferenceList;	/* optional element of type xenc:ReferenceList */
	char *CarriedKeyName;	/* optional element of type xsd:string */
	char *Recipient;	/* optional attribute of type xsd:string */
};
typedef struct xenc__EncryptedKeyType xenc__EncryptedKeyType;
#endif

#ifndef SOAP_TYPE__wsse__Security
#define SOAP_TYPE__wsse__Security (81)
/* wsse:Security */
struct _wsse__Security
{
	struct _wsu__Timestamp *wsu__Timestamp;	/* optional element of type wsu:Timestamp */
	struct _wsse__UsernameToken *UsernameToken;	/* optional element of type wsse:UsernameToken */
	struct _wsse__BinarySecurityToken *BinarySecurityToken;	/* optional element of type wsse:BinarySecurityToken */
	struct xenc__EncryptedKeyType *xenc__EncryptedKey;	/* optional element of type xenc:EncryptedKeyType */
	struct _xenc__ReferenceList *xenc__ReferenceList;	/* optional element of type xenc:ReferenceList */
	struct ds__SignatureType *ds__Signature;	/* optional element of type ds:SignatureType */
	char *SOAP_ENV__actor;	/* optional attribute of type xsd:string */
	char *SOAP_ENV__role;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Security _wsse__Security;
#endif

#ifndef SOAP_TYPE__wsse__Password
#define SOAP_TYPE__wsse__Password (11)
/* Primitive wsse:Password schema type: */
struct _wsse__Password
{
	char *__item;
	char *Type;	/* optional attribute of type xsd:string */
};
typedef struct _wsse__Password _wsse__Password;
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (87)
/* SOAP Header: */
struct SOAP_ENV__Header
{
	struct _wsse__Security *wsse__Security;	/* mustUnderstand */
};
#endif

#endif

#ifndef SOAP_TYPE__xop__Include
#define SOAP_TYPE__xop__Include (89)
/* Base64 schema type: */
struct _xop__Include
{
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
};
typedef struct _xop__Include _xop__Include;
#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (95)
/* Base64 schema type: */
struct xsd__base64Binary
{
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__GetProfiles
#define SOAP_TYPE__ns1__GetProfiles (148)
/* ns1:GetProfiles */
struct _ns1__GetProfiles
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE__ns1__GetProfilesResponse
#define SOAP_TYPE__ns1__GetProfilesResponse (149)
/* ns1:GetProfilesResponse */
struct _ns1__GetProfilesResponse
{
	int __sizeProfiles;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <Profiles> */
	struct ns2__Profile *Profiles;	/* optional element of type ns2:Profile */
};
#endif

#ifndef SOAP_TYPE__ns1__GetStreamUri
#define SOAP_TYPE__ns1__GetStreamUri (152)
/* ns1:GetStreamUri */
struct _ns1__GetStreamUri
{
	struct ns2__StreamSetup *StreamSetup;	/* required element of type ns2:StreamSetup */
	char *ProfileToken;	/* required element of type ns2:ReferenceToken */
};
#endif

#ifndef SOAP_TYPE__ns1__GetStreamUriResponse
#define SOAP_TYPE__ns1__GetStreamUriResponse (155)
/* ns1:GetStreamUriResponse */
struct _ns1__GetStreamUriResponse
{
	struct ns2__MediaUri *MediaUri;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns2:MediaUri */
};
#endif

#ifndef SOAP_TYPE__ns1__GetVideoEncoderConfigurationOptions
#define SOAP_TYPE__ns1__GetVideoEncoderConfigurationOptions (158)
/* ns1:GetVideoEncoderConfigurationOptions */
struct _ns1__GetVideoEncoderConfigurationOptions
{
	char *ConfigurationToken;	/* optional element of type ns2:ReferenceToken */
	char *ProfileToken;	/* optional element of type ns2:ReferenceToken */
};
#endif

#ifndef SOAP_TYPE__ns1__GetVideoEncoderConfigurationOptionsResponse
#define SOAP_TYPE__ns1__GetVideoEncoderConfigurationOptionsResponse (159)
/* ns1:GetVideoEncoderConfigurationOptionsResponse */
struct _ns1__GetVideoEncoderConfigurationOptionsResponse
{
	struct ns2__VideoEncoderConfigurationOptions *Options;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns2:VideoEncoderConfigurationOptions */
};
#endif

#ifndef SOAP_TYPE__ns1__SetVideoEncoderConfiguration
#define SOAP_TYPE__ns1__SetVideoEncoderConfiguration (162)
/* ns1:SetVideoEncoderConfiguration */
struct _ns1__SetVideoEncoderConfiguration
{
	struct ns2__VideoEncoderConfiguration *Configuration;	/* required element of type ns2:VideoEncoderConfiguration */
	enum xsd__boolean ForcePersistence;	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE__ns1__SetVideoEncoderConfigurationResponse
#define SOAP_TYPE__ns1__SetVideoEncoderConfigurationResponse (165)
/* ns1:SetVideoEncoderConfigurationResponse */
struct _ns1__SetVideoEncoderConfigurationResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE__ns1__GetSnapshotUri
#define SOAP_TYPE__ns1__GetSnapshotUri (166)
/* ns1:GetSnapshotUri */
struct _ns1__GetSnapshotUri
{
	char *ProfileToken;	/* required element of type ns2:ReferenceToken */
};
#endif

#ifndef SOAP_TYPE__ns1__GetSnapshotUriResponse
#define SOAP_TYPE__ns1__GetSnapshotUriResponse (167)
/* ns1:GetSnapshotUriResponse */
struct _ns1__GetSnapshotUriResponse
{
	struct ns2__MediaUri *MediaUri;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type ns2:MediaUri */
};
#endif

#ifndef SOAP_TYPE_ns2__User
#define SOAP_TYPE_ns2__User (168)
/* ns2:User */
struct ns2__User
{
	char *Username;	/* required element of type xsd:string */
	char *Password;	/* required element of type xsd:string */
	enum ns2__UserLevel UserLevel;	/* required element of type ns2:UserLevel */
	struct ns2__UserExtension *Extension;	/* optional element of type ns2:UserExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__UserExtension
#define SOAP_TYPE_ns2__UserExtension (169)
/* ns2:UserExtension */
struct ns2__UserExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__DeviceEntity
#define SOAP_TYPE_ns2__DeviceEntity (172)
/* ns2:DeviceEntity */
struct ns2__DeviceEntity
{
	char *token;	/* required attribute of type ns2:ReferenceToken */
};
#endif

#ifndef SOAP_TYPE_ns2__IntRectangle
#define SOAP_TYPE_ns2__IntRectangle (173)
/* ns2:IntRectangle */
struct ns2__IntRectangle
{
	int x;	/* required attribute of type xsd:int */
	int y;	/* required attribute of type xsd:int */
	int width;	/* required attribute of type xsd:int */
	int height;	/* required attribute of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__IntRectangleRange
#define SOAP_TYPE_ns2__IntRectangleRange (174)
/* ns2:IntRectangleRange */
struct ns2__IntRectangleRange
{
	struct ns2__IntRange *XRange;	/* required element of type ns2:IntRange */
	struct ns2__IntRange *YRange;	/* required element of type ns2:IntRange */
	struct ns2__IntRange *WidthRange;	/* required element of type ns2:IntRange */
	struct ns2__IntRange *HeightRange;	/* required element of type ns2:IntRange */
};
#endif

#ifndef SOAP_TYPE_ns2__IntRange
#define SOAP_TYPE_ns2__IntRange (175)
/* ns2:IntRange */
struct ns2__IntRange
{
	int Min;	/* required element of type xsd:int */
	int Max;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__FloatRange
#define SOAP_TYPE_ns2__FloatRange (177)
/* ns2:FloatRange */
struct ns2__FloatRange
{
	float Min;	/* required element of type xsd:float */
	float Max;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__DurationRange
#define SOAP_TYPE_ns2__DurationRange (179)
/* ns2:DurationRange */
struct ns2__DurationRange
{
	LONG64 Min;	/* external */
	LONG64 Max;	/* external */
};
#endif

#ifndef SOAP_TYPE_ns2__IntList
#define SOAP_TYPE_ns2__IntList (180)
/* ns2:IntList */
struct ns2__IntList
{
	int __sizeItems;	/* sequence of elements <Items> */
	int *Items;	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__VideoSourceExtension
#define SOAP_TYPE_ns2__VideoSourceExtension (181)
/* ns2:VideoSourceExtension */
struct ns2__VideoSourceExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__Profile
#define SOAP_TYPE_ns2__Profile (150)
/* ns2:Profile */
struct ns2__Profile
{
	char *Name;	/* required element of type ns2:Name */
	struct ns2__VideoSourceConfiguration *VideoSourceConfiguration;	/* optional element of type ns2:VideoSourceConfiguration */
	struct ns2__AudioSourceConfiguration *AudioSourceConfiguration;	/* optional element of type ns2:AudioSourceConfiguration */
	struct ns2__VideoEncoderConfiguration *VideoEncoderConfiguration;	/* optional element of type ns2:VideoEncoderConfiguration */
	struct ns2__AudioEncoderConfiguration *AudioEncoderConfiguration;	/* optional element of type ns2:AudioEncoderConfiguration */
	struct ns2__VideoAnalyticsConfiguration *VideoAnalyticsConfiguration;	/* optional element of type ns2:VideoAnalyticsConfiguration */
	struct ns2__PTZConfiguration *PTZConfiguration;	/* optional element of type ns2:PTZConfiguration */
	struct ns2__MetadataConfiguration *MetadataConfiguration;	/* optional element of type ns2:MetadataConfiguration */
	struct ns2__ProfileExtension *Extension;	/* optional element of type ns2:ProfileExtension */
	char *token;	/* required attribute of type ns2:ReferenceToken */
	enum xsd__boolean *fixed;	/* optional attribute of type xsd:boolean */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ProfileExtension
#define SOAP_TYPE_ns2__ProfileExtension (194)
/* ns2:ProfileExtension */
struct ns2__ProfileExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__ConfigurationEntity
#define SOAP_TYPE_ns2__ConfigurationEntity (197)
/* ns2:ConfigurationEntity */
struct ns2__ConfigurationEntity
{
	char *Name;	/* required element of type ns2:Name */
	int UseCount;	/* required element of type xsd:int */
	char *token;	/* required attribute of type ns2:ReferenceToken */
};
#endif

#ifndef SOAP_TYPE_ns2__VideoSourceConfigurationOptions
#define SOAP_TYPE_ns2__VideoSourceConfigurationOptions (198)
/* ns2:VideoSourceConfigurationOptions */
struct ns2__VideoSourceConfigurationOptions
{
	struct ns2__IntRectangleRange *BoundsRange;	/* required element of type ns2:IntRectangleRange */
	int __sizeVideoSourceTokensAvailable;	/* sequence of elements <VideoSourceTokensAvailable> */
	char **VideoSourceTokensAvailable;	/* required element of type ns2:ReferenceToken */
	struct ns2__VideoSourceConfigurationOptionsExtension *Extension;	/* optional element of type ns2:VideoSourceConfigurationOptionsExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__VideoSourceConfigurationOptionsExtension
#define SOAP_TYPE_ns2__VideoSourceConfigurationOptionsExtension (201)
/* ns2:VideoSourceConfigurationOptionsExtension */
struct ns2__VideoSourceConfigurationOptionsExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__VideoResolution
#define SOAP_TYPE_ns2__VideoResolution (203)
/* ns2:VideoResolution */
struct ns2__VideoResolution
{
	int Width;	/* required element of type xsd:int */
	int Height;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__VideoRateControl
#define SOAP_TYPE_ns2__VideoRateControl (204)
/* ns2:VideoRateControl */
struct ns2__VideoRateControl
{
	int FrameRateLimit;	/* required element of type xsd:int */
	int EncodingInterval;	/* required element of type xsd:int */
	int BitrateLimit;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__Mpeg4Configuration
#define SOAP_TYPE_ns2__Mpeg4Configuration (205)
/* ns2:Mpeg4Configuration */
struct ns2__Mpeg4Configuration
{
	int GovLength;	/* required element of type xsd:int */
	enum ns2__Mpeg4Profile Mpeg4Profile;	/* required element of type ns2:Mpeg4Profile */
};
#endif

#ifndef SOAP_TYPE_ns2__H264Configuration
#define SOAP_TYPE_ns2__H264Configuration (206)
/* ns2:H264Configuration */
struct ns2__H264Configuration
{
	int GovLength;	/* required element of type xsd:int */
	enum ns2__H264Profile H264Profile;	/* required element of type ns2:H264Profile */
};
#endif

#ifndef SOAP_TYPE_ns2__VideoEncoderConfigurationOptions
#define SOAP_TYPE_ns2__VideoEncoderConfigurationOptions (160)
/* ns2:VideoEncoderConfigurationOptions */
struct ns2__VideoEncoderConfigurationOptions
{
	struct ns2__IntRange *QualityRange;	/* required element of type ns2:IntRange */
	struct ns2__JpegOptions *JPEG;	/* optional element of type ns2:JpegOptions */
	struct ns2__Mpeg4Options *MPEG4;	/* optional element of type ns2:Mpeg4Options */
	struct ns2__H264Options *H264;	/* optional element of type ns2:H264Options */
	struct ns2__VideoEncoderOptionsExtension *Extension;	/* optional element of type ns2:VideoEncoderOptionsExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__VideoEncoderOptionsExtension
#define SOAP_TYPE_ns2__VideoEncoderOptionsExtension (213)
/* ns2:VideoEncoderOptionsExtension */
struct ns2__VideoEncoderOptionsExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__JpegOptions
#define SOAP_TYPE_ns2__JpegOptions (207)
/* ns2:JpegOptions */
struct ns2__JpegOptions
{
	int __sizeResolutionsAvailable;	/* sequence of elements <ResolutionsAvailable> */
	struct ns2__VideoResolution *ResolutionsAvailable;	/* required element of type ns2:VideoResolution */
	struct ns2__IntRange *FrameRateRange;	/* required element of type ns2:IntRange */
	struct ns2__IntRange *EncodingIntervalRange;	/* required element of type ns2:IntRange */
};
#endif

#ifndef SOAP_TYPE_ns2__Mpeg4Options
#define SOAP_TYPE_ns2__Mpeg4Options (209)
/* ns2:Mpeg4Options */
struct ns2__Mpeg4Options
{
	int __sizeResolutionsAvailable;	/* sequence of elements <ResolutionsAvailable> */
	struct ns2__VideoResolution *ResolutionsAvailable;	/* required element of type ns2:VideoResolution */
	struct ns2__IntRange *GovLengthRange;	/* required element of type ns2:IntRange */
	struct ns2__IntRange *FrameRateRange;	/* required element of type ns2:IntRange */
	struct ns2__IntRange *EncodingIntervalRange;	/* required element of type ns2:IntRange */
	int __sizeMpeg4ProfilesSupported;	/* sequence of elements <Mpeg4ProfilesSupported> */
	enum ns2__Mpeg4Profile *Mpeg4ProfilesSupported;	/* required element of type ns2:Mpeg4Profile */
};
#endif

#ifndef SOAP_TYPE_ns2__H264Options
#define SOAP_TYPE_ns2__H264Options (211)
/* ns2:H264Options */
struct ns2__H264Options
{
	int __sizeResolutionsAvailable;	/* sequence of elements <ResolutionsAvailable> */
	struct ns2__VideoResolution *ResolutionsAvailable;	/* required element of type ns2:VideoResolution */
	struct ns2__IntRange *GovLengthRange;	/* required element of type ns2:IntRange */
	struct ns2__IntRange *FrameRateRange;	/* required element of type ns2:IntRange */
	struct ns2__IntRange *EncodingIntervalRange;	/* required element of type ns2:IntRange */
	int __sizeH264ProfilesSupported;	/* sequence of elements <H264ProfilesSupported> */
	enum ns2__H264Profile *H264ProfilesSupported;	/* required element of type ns2:H264Profile */
};
#endif

#ifndef SOAP_TYPE_ns2__AudioSourceConfigurationOptions
#define SOAP_TYPE_ns2__AudioSourceConfigurationOptions (218)
/* ns2:AudioSourceConfigurationOptions */
struct ns2__AudioSourceConfigurationOptions
{
	int __sizeInputTokensAvailable;	/* sequence of elements <InputTokensAvailable> */
	char **InputTokensAvailable;	/* required element of type ns2:ReferenceToken */
	struct ns2__AudioSourceOptionsExtension *Extension;	/* optional element of type ns2:AudioSourceOptionsExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__AudioSourceOptionsExtension
#define SOAP_TYPE_ns2__AudioSourceOptionsExtension (219)
/* ns2:AudioSourceOptionsExtension */
struct ns2__AudioSourceOptionsExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__AudioEncoderConfigurationOptions
#define SOAP_TYPE_ns2__AudioEncoderConfigurationOptions (221)
/* ns2:AudioEncoderConfigurationOptions */
struct ns2__AudioEncoderConfigurationOptions
{
	int __sizeOptions;	/* sequence of elements <Options> */
	struct ns2__AudioEncoderConfigurationOption *Options;	/* optional element of type ns2:AudioEncoderConfigurationOption */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__AudioEncoderConfigurationOption
#define SOAP_TYPE_ns2__AudioEncoderConfigurationOption (222)
/* ns2:AudioEncoderConfigurationOption */
struct ns2__AudioEncoderConfigurationOption
{
	enum ns2__AudioEncoding Encoding;	/* required element of type ns2:AudioEncoding */
	struct ns2__IntList *BitrateList;	/* required element of type ns2:IntList */
	struct ns2__IntList *SampleRateList;	/* required element of type ns2:IntList */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZFilter
#define SOAP_TYPE_ns2__PTZFilter (225)
/* ns2:PTZFilter */
struct ns2__PTZFilter
{
	enum xsd__boolean Status;	/* required element of type xsd:boolean */
	enum xsd__boolean Position;	/* required element of type xsd:boolean */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE__ns2__EventSubscription_SubscriptionPolicy
#define SOAP_TYPE__ns2__EventSubscription_SubscriptionPolicy (229)
/* ns2:EventSubscription-SubscriptionPolicy */
struct _ns2__EventSubscription_SubscriptionPolicy
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__EventSubscription
#define SOAP_TYPE_ns2__EventSubscription (226)
/* ns2:EventSubscription */
struct ns2__EventSubscription
{
	struct ns2__FilterType *Filter;	/* optional element of type ns2:FilterType */
	struct _ns2__EventSubscription_SubscriptionPolicy *SubscriptionPolicy;	/* optional element of type ns2:EventSubscription-SubscriptionPolicy */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__MetadataConfigurationOptions
#define SOAP_TYPE_ns2__MetadataConfigurationOptions (231)
/* ns2:MetadataConfigurationOptions */
struct ns2__MetadataConfigurationOptions
{
	struct ns2__PTZStatusFilterOptions *PTZStatusFilterOptions;	/* required element of type ns2:PTZStatusFilterOptions */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZStatusFilterOptions
#define SOAP_TYPE_ns2__PTZStatusFilterOptions (232)
/* ns2:PTZStatusFilterOptions */
struct ns2__PTZStatusFilterOptions
{
	enum xsd__boolean PanTiltStatusSupported;	/* required element of type xsd:boolean */
	enum xsd__boolean ZoomStatusSupported;	/* required element of type xsd:boolean */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__MulticastConfiguration
#define SOAP_TYPE_ns2__MulticastConfiguration (234)
/* ns2:MulticastConfiguration */
struct ns2__MulticastConfiguration
{
	struct ns2__IPAddress *Address;	/* required element of type ns2:IPAddress */
	int Port;	/* required element of type xsd:int */
	int TTL;	/* required element of type xsd:int */
	enum xsd__boolean AutoStart;	/* required element of type xsd:boolean */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__StreamSetup
#define SOAP_TYPE_ns2__StreamSetup (153)
/* ns2:StreamSetup */
struct ns2__StreamSetup
{
	enum ns2__StreamType Stream;	/* required element of type ns2:StreamType */
	struct ns2__Transport *Transport;	/* required element of type ns2:Transport */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__Transport
#define SOAP_TYPE_ns2__Transport (237)
/* ns2:Transport */
struct ns2__Transport
{
	enum ns2__TransportProtocol Protocol;	/* required element of type ns2:TransportProtocol */
};
#endif

#ifndef SOAP_TYPE_ns2__MediaUri
#define SOAP_TYPE_ns2__MediaUri (156)
/* ns2:MediaUri */
struct ns2__MediaUri
{
	char *Uri;	/* required element of type xsd:anyURI */
	enum xsd__boolean InvalidAfterConnect;	/* required element of type xsd:boolean */
	enum xsd__boolean InvalidAfterReboot;	/* required element of type xsd:boolean */
	LONG64 Timeout;	/* external */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__Scope
#define SOAP_TYPE_ns2__Scope (239)
/* ns2:Scope */
struct ns2__Scope
{
	enum ns2__ScopeDefinition ScopeDef;	/* required element of type ns2:ScopeDefinition */
	char *ScopeItem;	/* required element of type xsd:anyURI */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkInterfaceExtension
#define SOAP_TYPE_ns2__NetworkInterfaceExtension (240)
/* ns2:NetworkInterfaceExtension */
struct ns2__NetworkInterfaceExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkInterfaceLink
#define SOAP_TYPE_ns2__NetworkInterfaceLink (241)
/* ns2:NetworkInterfaceLink */
struct ns2__NetworkInterfaceLink
{
	struct ns2__NetworkInterfaceConnectionSetting *AdminSettings;	/* required element of type ns2:NetworkInterfaceConnectionSetting */
	struct ns2__NetworkInterfaceConnectionSetting *OperSettings;	/* required element of type ns2:NetworkInterfaceConnectionSetting */
	int InterfaceType;	/* required element of type ns2:IANA-IfTypes */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkInterfaceConnectionSetting
#define SOAP_TYPE_ns2__NetworkInterfaceConnectionSetting (242)
/* ns2:NetworkInterfaceConnectionSetting */
struct ns2__NetworkInterfaceConnectionSetting
{
	enum xsd__boolean AutoNegotiation;	/* required element of type xsd:boolean */
	int Speed;	/* required element of type xsd:int */
	enum ns2__Duplex Duplex;	/* required element of type ns2:Duplex */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkInterfaceInfo
#define SOAP_TYPE_ns2__NetworkInterfaceInfo (244)
/* ns2:NetworkInterfaceInfo */
struct ns2__NetworkInterfaceInfo
{
	char *Name;	/* optional element of type xsd:string */
	char *HwAddress;	/* required element of type ns2:HwAddress */
	int *MTU;	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__IPv6NetworkInterface
#define SOAP_TYPE_ns2__IPv6NetworkInterface (245)
/* ns2:IPv6NetworkInterface */
struct ns2__IPv6NetworkInterface
{
	enum xsd__boolean Enabled;	/* required element of type xsd:boolean */
	struct ns2__IPv6Configuration *Config;	/* optional element of type ns2:IPv6Configuration */
};
#endif

#ifndef SOAP_TYPE_ns2__IPv4NetworkInterface
#define SOAP_TYPE_ns2__IPv4NetworkInterface (248)
/* ns2:IPv4NetworkInterface */
struct ns2__IPv4NetworkInterface
{
	enum xsd__boolean Enabled;	/* required element of type xsd:boolean */
	struct ns2__IPv4Configuration *Config;	/* required element of type ns2:IPv4Configuration */
};
#endif

#ifndef SOAP_TYPE_ns2__IPv4Configuration
#define SOAP_TYPE_ns2__IPv4Configuration (249)
/* ns2:IPv4Configuration */
struct ns2__IPv4Configuration
{
	int __sizeManual;	/* sequence of elements <Manual> */
	struct ns2__PrefixedIPv4Address *Manual;	/* optional element of type ns2:PrefixedIPv4Address */
	struct ns2__PrefixedIPv4Address *LinkLocal;	/* optional element of type ns2:PrefixedIPv4Address */
	struct ns2__PrefixedIPv4Address *FromDHCP;	/* optional element of type ns2:PrefixedIPv4Address */
	enum xsd__boolean DHCP;	/* required element of type xsd:boolean */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__IPv6Configuration
#define SOAP_TYPE_ns2__IPv6Configuration (246)
/* ns2:IPv6Configuration */
struct ns2__IPv6Configuration
{
	enum xsd__boolean *AcceptRouterAdvert;	/* optional element of type xsd:boolean */
	enum ns2__IPv6DHCPConfiguration DHCP;	/* required element of type ns2:IPv6DHCPConfiguration */
	int __sizeManual;	/* sequence of elements <Manual> */
	struct ns2__PrefixedIPv6Address *Manual;	/* optional element of type ns2:PrefixedIPv6Address */
	int __sizeLinkLocal;	/* sequence of elements <LinkLocal> */
	struct ns2__PrefixedIPv6Address *LinkLocal;	/* optional element of type ns2:PrefixedIPv6Address */
	int __sizeFromDHCP;	/* sequence of elements <FromDHCP> */
	struct ns2__PrefixedIPv6Address *FromDHCP;	/* optional element of type ns2:PrefixedIPv6Address */
	int __sizeFromRA;	/* sequence of elements <FromRA> */
	struct ns2__PrefixedIPv6Address *FromRA;	/* optional element of type ns2:PrefixedIPv6Address */
	struct ns2__IPv6ConfigurationExtension *Extension;	/* optional element of type ns2:IPv6ConfigurationExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__IPv6ConfigurationExtension
#define SOAP_TYPE_ns2__IPv6ConfigurationExtension (255)
/* ns2:IPv6ConfigurationExtension */
struct ns2__IPv6ConfigurationExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkProtocol
#define SOAP_TYPE_ns2__NetworkProtocol (257)
/* ns2:NetworkProtocol */
struct ns2__NetworkProtocol
{
	enum ns2__NetworkProtocolType Name;	/* required element of type ns2:NetworkProtocolType */
	enum xsd__boolean Enabled;	/* required element of type xsd:boolean */
	int __sizePort;	/* sequence of elements <Port> */
	int *Port;	/* required element of type xsd:int */
	struct ns2__NetworkProtocolExtension *Extension;	/* optional element of type ns2:NetworkProtocolExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkProtocolExtension
#define SOAP_TYPE_ns2__NetworkProtocolExtension (258)
/* ns2:NetworkProtocolExtension */
struct ns2__NetworkProtocolExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkHost
#define SOAP_TYPE_ns2__NetworkHost (260)
/* ns2:NetworkHost */
struct ns2__NetworkHost
{
	enum ns2__NetworkHostType Type;	/* required element of type ns2:NetworkHostType */
	char **IPv4Address;	/* optional element of type ns2:IPv4Address */
	char **IPv6Address;	/* optional element of type ns2:IPv6Address */
	char **DNSname;	/* optional element of type ns2:DNSName */
	struct ns2__NetworkHostExtension *Extension;	/* optional element of type ns2:NetworkHostExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkHostExtension
#define SOAP_TYPE_ns2__NetworkHostExtension (264)
/* ns2:NetworkHostExtension */
struct ns2__NetworkHostExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__IPAddress
#define SOAP_TYPE_ns2__IPAddress (235)
/* ns2:IPAddress */
struct ns2__IPAddress
{
	enum ns2__IPType Type;	/* required element of type ns2:IPType */
	char **IPv4Address;	/* optional element of type ns2:IPv4Address */
	char **IPv6Address;	/* optional element of type ns2:IPv6Address */
};
#endif

#ifndef SOAP_TYPE_ns2__PrefixedIPv4Address
#define SOAP_TYPE_ns2__PrefixedIPv4Address (251)
/* ns2:PrefixedIPv4Address */
struct ns2__PrefixedIPv4Address
{
	char *Address;	/* required element of type ns2:IPv4Address */
	int PrefixLength;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__PrefixedIPv6Address
#define SOAP_TYPE_ns2__PrefixedIPv6Address (253)
/* ns2:PrefixedIPv6Address */
struct ns2__PrefixedIPv6Address
{
	char *Address;	/* required element of type ns2:IPv6Address */
	int PrefixLength;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__HostnameInformation
#define SOAP_TYPE_ns2__HostnameInformation (266)
/* ns2:HostnameInformation */
struct ns2__HostnameInformation
{
	enum xsd__boolean FromDHCP;	/* required element of type xsd:boolean */
	char *Name;	/* optional element of type xsd:token */
	struct ns2__HostnameInformationExtension *Extension;	/* optional element of type ns2:HostnameInformationExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__HostnameInformationExtension
#define SOAP_TYPE_ns2__HostnameInformationExtension (267)
/* ns2:HostnameInformationExtension */
struct ns2__HostnameInformationExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__DNSInformation
#define SOAP_TYPE_ns2__DNSInformation (269)
/* ns2:DNSInformation */
struct ns2__DNSInformation
{
	enum xsd__boolean FromDHCP;	/* required element of type xsd:boolean */
	int __sizeSearchDomain;	/* sequence of elements <SearchDomain> */
	char **SearchDomain;	/* optional element of type xsd:token */
	int __sizeDNSFromDHCP;	/* sequence of elements <DNSFromDHCP> */
	struct ns2__IPAddress *DNSFromDHCP;	/* optional element of type ns2:IPAddress */
	int __sizeDNSManual;	/* sequence of elements <DNSManual> */
	struct ns2__IPAddress *DNSManual;	/* optional element of type ns2:IPAddress */
	struct ns2__DNSInformationExtension *Extension;	/* optional element of type ns2:DNSInformationExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__DNSInformationExtension
#define SOAP_TYPE_ns2__DNSInformationExtension (271)
/* ns2:DNSInformationExtension */
struct ns2__DNSInformationExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__NTPInformation
#define SOAP_TYPE_ns2__NTPInformation (273)
/* ns2:NTPInformation */
struct ns2__NTPInformation
{
	enum xsd__boolean FromDHCP;	/* required element of type xsd:boolean */
	int __sizeNTPFromDHCP;	/* sequence of elements <NTPFromDHCP> */
	struct ns2__NetworkHost *NTPFromDHCP;	/* optional element of type ns2:NetworkHost */
	int __sizeNTPManual;	/* sequence of elements <NTPManual> */
	struct ns2__NetworkHost *NTPManual;	/* optional element of type ns2:NetworkHost */
	struct ns2__NTPInformationExtension *Extension;	/* optional element of type ns2:NTPInformationExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__NTPInformationExtension
#define SOAP_TYPE_ns2__NTPInformationExtension (275)
/* ns2:NTPInformationExtension */
struct ns2__NTPInformationExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__DynamicDNSInformation
#define SOAP_TYPE_ns2__DynamicDNSInformation (277)
/* ns2:DynamicDNSInformation */
struct ns2__DynamicDNSInformation
{
	enum ns2__DynamicDNSType Type;	/* required element of type ns2:DynamicDNSType */
	char **Name;	/* optional element of type ns2:DNSName */
	LONG64 *TTL;	/* optional element of type xsd:duration */
	struct ns2__DynamicDNSInformationExtension *Extension;	/* optional element of type ns2:DynamicDNSInformationExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__DynamicDNSInformationExtension
#define SOAP_TYPE_ns2__DynamicDNSInformationExtension (279)
/* ns2:DynamicDNSInformationExtension */
struct ns2__DynamicDNSInformationExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkInterfaceSetConfiguration
#define SOAP_TYPE_ns2__NetworkInterfaceSetConfiguration (281)
/* ns2:NetworkInterfaceSetConfiguration */
struct ns2__NetworkInterfaceSetConfiguration
{
	enum xsd__boolean *Enabled;	/* optional element of type xsd:boolean */
	struct ns2__NetworkInterfaceConnectionSetting *Link;	/* optional element of type ns2:NetworkInterfaceConnectionSetting */
	int *MTU;	/* optional element of type xsd:int */
	struct ns2__IPv4NetworkInterfaceSetConfiguration *IPv4;	/* optional element of type ns2:IPv4NetworkInterfaceSetConfiguration */
	struct ns2__IPv6NetworkInterfaceSetConfiguration *IPv6;	/* optional element of type ns2:IPv6NetworkInterfaceSetConfiguration */
	struct ns2__NetworkInterfaceSetConfigurationExtension *Extension;	/* optional element of type ns2:NetworkInterfaceSetConfigurationExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkInterfaceSetConfigurationExtension
#define SOAP_TYPE_ns2__NetworkInterfaceSetConfigurationExtension (286)
/* ns2:NetworkInterfaceSetConfigurationExtension */
struct ns2__NetworkInterfaceSetConfigurationExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__IPv6NetworkInterfaceSetConfiguration
#define SOAP_TYPE_ns2__IPv6NetworkInterfaceSetConfiguration (284)
/* ns2:IPv6NetworkInterfaceSetConfiguration */
struct ns2__IPv6NetworkInterfaceSetConfiguration
{
	enum xsd__boolean *Enabled;	/* optional element of type xsd:boolean */
	enum xsd__boolean *AcceptRouterAdvert;	/* optional element of type xsd:boolean */
	int __sizeManual;	/* sequence of elements <Manual> */
	struct ns2__PrefixedIPv6Address *Manual;	/* optional element of type ns2:PrefixedIPv6Address */
	enum ns2__IPv6DHCPConfiguration *DHCP;	/* optional element of type ns2:IPv6DHCPConfiguration */
};
#endif

#ifndef SOAP_TYPE_ns2__IPv4NetworkInterfaceSetConfiguration
#define SOAP_TYPE_ns2__IPv4NetworkInterfaceSetConfiguration (282)
/* ns2:IPv4NetworkInterfaceSetConfiguration */
struct ns2__IPv4NetworkInterfaceSetConfiguration
{
	enum xsd__boolean *Enabled;	/* optional element of type xsd:boolean */
	int __sizeManual;	/* sequence of elements <Manual> */
	struct ns2__PrefixedIPv4Address *Manual;	/* optional element of type ns2:PrefixedIPv4Address */
	enum xsd__boolean *DHCP;	/* optional element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkGateway
#define SOAP_TYPE_ns2__NetworkGateway (289)
/* ns2:NetworkGateway */
struct ns2__NetworkGateway
{
	int __sizeIPv4Address;	/* sequence of elements <IPv4Address> */
	char **IPv4Address;	/* optional element of type ns2:IPv4Address */
	int __sizeIPv6Address;	/* sequence of elements <IPv6Address> */
	char **IPv6Address;	/* optional element of type ns2:IPv6Address */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkZeroConfiguration
#define SOAP_TYPE_ns2__NetworkZeroConfiguration (290)
/* ns2:NetworkZeroConfiguration */
struct ns2__NetworkZeroConfiguration
{
	char *InterfaceToken;	/* required element of type ns2:ReferenceToken */
	enum xsd__boolean Enabled;	/* required element of type xsd:boolean */
	int __sizeAddresses;	/* sequence of elements <Addresses> */
	char **Addresses;	/* optional element of type ns2:IPv4Address */
	struct ns2__NetworkZeroConfigurationExtension *Extension;	/* optional element of type ns2:NetworkZeroConfigurationExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkZeroConfigurationExtension
#define SOAP_TYPE_ns2__NetworkZeroConfigurationExtension (291)
/* ns2:NetworkZeroConfigurationExtension */
struct ns2__NetworkZeroConfigurationExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__IPAddressFilter
#define SOAP_TYPE_ns2__IPAddressFilter (293)
/* ns2:IPAddressFilter */
struct ns2__IPAddressFilter
{
	enum ns2__IPAddressFilterType Type;	/* required element of type ns2:IPAddressFilterType */
	int __sizeIPv4Address;	/* sequence of elements <IPv4Address> */
	struct ns2__PrefixedIPv4Address *IPv4Address;	/* optional element of type ns2:PrefixedIPv4Address */
	int __sizeIPv6Address;	/* sequence of elements <IPv6Address> */
	struct ns2__PrefixedIPv6Address *IPv6Address;	/* optional element of type ns2:PrefixedIPv6Address */
	struct ns2__IPAddressFilterExtension *Extension;	/* optional element of type ns2:IPAddressFilterExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__IPAddressFilterExtension
#define SOAP_TYPE_ns2__IPAddressFilterExtension (294)
/* ns2:IPAddressFilterExtension */
struct ns2__IPAddressFilterExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__Capabilities
#define SOAP_TYPE_ns2__Capabilities (296)
/* ns2:Capabilities */
struct ns2__Capabilities
{
	struct ns2__AnalyticsCapabilities *Analytics;	/* optional element of type ns2:AnalyticsCapabilities */
	struct ns2__DeviceCapabilities *Device;	/* optional element of type ns2:DeviceCapabilities */
	struct ns2__EventCapabilities *Events;	/* optional element of type ns2:EventCapabilities */
	struct ns2__ImagingCapabilities *Imaging;	/* optional element of type ns2:ImagingCapabilities */
	struct ns2__MediaCapabilities *Media;	/* optional element of type ns2:MediaCapabilities */
	struct ns2__PTZCapabilities *PTZ;	/* optional element of type ns2:PTZCapabilities */
	struct ns2__CapabilitiesExtension *Extension;	/* optional element of type ns2:CapabilitiesExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__CapabilitiesExtension
#define SOAP_TYPE_ns2__CapabilitiesExtension (309)
/* ns2:CapabilitiesExtension */
struct ns2__CapabilitiesExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__AnalyticsCapabilities
#define SOAP_TYPE_ns2__AnalyticsCapabilities (297)
/* ns2:AnalyticsCapabilities */
struct ns2__AnalyticsCapabilities
{
	char *XAddr;	/* required element of type xsd:anyURI */
	enum xsd__boolean RuleSupport;	/* required element of type xsd:boolean */
	enum xsd__boolean AnalyticsModuleSupport;	/* required element of type xsd:boolean */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__DeviceCapabilities
#define SOAP_TYPE_ns2__DeviceCapabilities (299)
/* ns2:DeviceCapabilities */
struct ns2__DeviceCapabilities
{
	char *XAddr;	/* required element of type xsd:anyURI */
	struct ns2__NetworkCapabilities *Network;	/* optional element of type ns2:NetworkCapabilities */
	struct ns2__SystemCapabilities *System;	/* optional element of type ns2:SystemCapabilities */
	struct ns2__IOCapabilities *IO;	/* optional element of type ns2:IOCapabilities */
	struct ns2__SecurityCapabilities *Security;	/* optional element of type ns2:SecurityCapabilities */
	struct ns2__DeviceCapabilitiesExtension *Extension;	/* optional element of type ns2:DeviceCapabilitiesExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__DeviceCapabilitiesExtension
#define SOAP_TYPE_ns2__DeviceCapabilitiesExtension (319)
/* ns2:DeviceCapabilitiesExtension */
struct ns2__DeviceCapabilitiesExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__EventCapabilities
#define SOAP_TYPE_ns2__EventCapabilities (301)
/* ns2:EventCapabilities */
struct ns2__EventCapabilities
{
	char *XAddr;	/* required element of type xsd:anyURI */
	enum xsd__boolean WSSubscriptionPolicySupport;	/* required element of type xsd:boolean */
	enum xsd__boolean WSPullPointSupport;	/* required element of type xsd:boolean */
	enum xsd__boolean WSPausableSubscriptionManagerInterfaceSupport;	/* required element of type xsd:boolean */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__IOCapabilities
#define SOAP_TYPE_ns2__IOCapabilities (315)
/* ns2:IOCapabilities */
struct ns2__IOCapabilities
{
	int *InputConnectors;	/* optional element of type xsd:int */
	int *RelayOutputs;	/* optional element of type xsd:int */
	struct ns2__IOCapabilitiesExtension *Extension;	/* optional element of type ns2:IOCapabilitiesExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__IOCapabilitiesExtension
#define SOAP_TYPE_ns2__IOCapabilitiesExtension (321)
/* ns2:IOCapabilitiesExtension */
struct ns2__IOCapabilitiesExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__MediaCapabilities
#define SOAP_TYPE_ns2__MediaCapabilities (305)
/* ns2:MediaCapabilities */
struct ns2__MediaCapabilities
{
	char *XAddr;	/* required element of type xsd:anyURI */
	struct ns2__RealTimeStreamingCapabilities *StreamingCapabilities;	/* required element of type ns2:RealTimeStreamingCapabilities */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	struct ns2__MediaCapabilitiesExtension *Extension;	/* optional element of type ns2:MediaCapabilitiesExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__MediaCapabilitiesExtension
#define SOAP_TYPE_ns2__MediaCapabilitiesExtension (325)
/* ns2:MediaCapabilitiesExtension */
struct ns2__MediaCapabilitiesExtension
{
	struct ns2__ProfileCapabilities *ProfileCapabilities;	/* required element of type ns2:ProfileCapabilities */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__RealTimeStreamingCapabilities
#define SOAP_TYPE_ns2__RealTimeStreamingCapabilities (323)
/* ns2:RealTimeStreamingCapabilities */
struct ns2__RealTimeStreamingCapabilities
{
	enum xsd__boolean *RTPMulticast;	/* optional element of type xsd:boolean */
	enum xsd__boolean *RTP_USCORETCP;	/* optional element of type xsd:boolean */
	enum xsd__boolean *RTP_USCORERTSP_USCORETCP;	/* optional element of type xsd:boolean */
	struct ns2__RealTimeStreamingCapabilitiesExtension *Extension;	/* optional element of type ns2:RealTimeStreamingCapabilitiesExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__RealTimeStreamingCapabilitiesExtension
#define SOAP_TYPE_ns2__RealTimeStreamingCapabilitiesExtension (329)
/* ns2:RealTimeStreamingCapabilitiesExtension */
struct ns2__RealTimeStreamingCapabilitiesExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__ProfileCapabilities
#define SOAP_TYPE_ns2__ProfileCapabilities (327)
/* ns2:ProfileCapabilities */
struct ns2__ProfileCapabilities
{
	int MaximumNumberOfProfiles;	/* required element of type xsd:int */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkCapabilities
#define SOAP_TYPE_ns2__NetworkCapabilities (311)
/* ns2:NetworkCapabilities */
struct ns2__NetworkCapabilities
{
	enum xsd__boolean *IPFilter;	/* optional element of type xsd:boolean */
	enum xsd__boolean *ZeroConfiguration;	/* optional element of type xsd:boolean */
	enum xsd__boolean *IPVersion6;	/* optional element of type xsd:boolean */
	enum xsd__boolean *DynDNS;	/* optional element of type xsd:boolean */
	struct ns2__NetworkCapabilitiesExtension *Extension;	/* optional element of type ns2:NetworkCapabilitiesExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkCapabilitiesExtension
#define SOAP_TYPE_ns2__NetworkCapabilitiesExtension (331)
/* ns2:NetworkCapabilitiesExtension */
struct ns2__NetworkCapabilitiesExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__SecurityCapabilities
#define SOAP_TYPE_ns2__SecurityCapabilities (317)
/* ns2:SecurityCapabilities */
struct ns2__SecurityCapabilities
{
	enum xsd__boolean TLS1_x002e1;	/* required element of type xsd:boolean */
	enum xsd__boolean TLS1_x002e2;	/* required element of type xsd:boolean */
	enum xsd__boolean OnboardKeyGeneration;	/* required element of type xsd:boolean */
	enum xsd__boolean AccessPolicyConfig;	/* required element of type xsd:boolean */
	enum xsd__boolean X_x002e509Token;	/* required element of type xsd:boolean */
	enum xsd__boolean SAMLToken;	/* required element of type xsd:boolean */
	enum xsd__boolean KerberosToken;	/* required element of type xsd:boolean */
	enum xsd__boolean RELToken;	/* required element of type xsd:boolean */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	struct ns2__SecurityCapabilitiesExtension *Extension;	/* optional element of type ns2:SecurityCapabilitiesExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__SecurityCapabilitiesExtension
#define SOAP_TYPE_ns2__SecurityCapabilitiesExtension (333)
/* ns2:SecurityCapabilitiesExtension */
struct ns2__SecurityCapabilitiesExtension
{
	enum xsd__boolean TLS1_x002e0;	/* required element of type xsd:boolean */
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__StorageCapabilities
#define SOAP_TYPE_ns2__StorageCapabilities (335)
/* ns2:StorageCapabilities */
struct ns2__StorageCapabilities
{
	char *XAddr;	/* required element of type xsd:anyURI */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__SystemCapabilities
#define SOAP_TYPE_ns2__SystemCapabilities (313)
/* ns2:SystemCapabilities */
struct ns2__SystemCapabilities
{
	enum xsd__boolean DiscoveryResolve;	/* required element of type xsd:boolean */
	enum xsd__boolean DiscoveryBye;	/* required element of type xsd:boolean */
	enum xsd__boolean RemoteDiscovery;	/* required element of type xsd:boolean */
	enum xsd__boolean SystemBackup;	/* required element of type xsd:boolean */
	enum xsd__boolean SystemLogging;	/* required element of type xsd:boolean */
	enum xsd__boolean FirmwareUpgrade;	/* required element of type xsd:boolean */
	int __sizeSupportedVersions;	/* sequence of elements <SupportedVersions> */
	struct ns2__OnvifVersion *SupportedVersions;	/* required element of type ns2:OnvifVersion */
	struct ns2__SystemCapabilitiesExtension *Extension;	/* optional element of type ns2:SystemCapabilitiesExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__SystemCapabilitiesExtension
#define SOAP_TYPE_ns2__SystemCapabilitiesExtension (338)
/* ns2:SystemCapabilitiesExtension */
struct ns2__SystemCapabilitiesExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__OnvifVersion
#define SOAP_TYPE_ns2__OnvifVersion (336)
/* ns2:OnvifVersion */
struct ns2__OnvifVersion
{
	int Major;	/* required element of type xsd:int */
	int Minor;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__ImagingCapabilities
#define SOAP_TYPE_ns2__ImagingCapabilities (303)
/* ns2:ImagingCapabilities */
struct ns2__ImagingCapabilities
{
	char *XAddr;	/* required element of type xsd:anyURI */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZCapabilities
#define SOAP_TYPE_ns2__PTZCapabilities (307)
/* ns2:PTZCapabilities */
struct ns2__PTZCapabilities
{
	char *XAddr;	/* required element of type xsd:anyURI */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__SystemLog
#define SOAP_TYPE_ns2__SystemLog (340)
/* ns2:SystemLog */
struct ns2__SystemLog
{
	struct ns2__AttachmentData *Binary;	/* optional element of type ns2:AttachmentData */
	char *String;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__SupportInformation
#define SOAP_TYPE_ns2__SupportInformation (343)
/* ns2:SupportInformation */
struct ns2__SupportInformation
{
	struct ns2__AttachmentData *Binary;	/* optional element of type ns2:AttachmentData */
	char *String;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__BinaryData
#define SOAP_TYPE_ns2__BinaryData (344)
/* ns2:BinaryData */
struct ns2__BinaryData
{
	struct xsd__base64Binary Data;	/* required element of type xsd:base64Binary */
	char *xmime__contentType;	/* optional attribute of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__AttachmentData
#define SOAP_TYPE_ns2__AttachmentData (341)
/* ns2:AttachmentData */
struct ns2__AttachmentData
{
	struct _xop__Include xop__Include;	/* required element of type xop:Include */
	char *xmime__contentType;	/* optional attribute of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__BackupFile
#define SOAP_TYPE_ns2__BackupFile (345)
/* ns2:BackupFile */
struct ns2__BackupFile
{
	char *Name;	/* required element of type xsd:string */
	struct ns2__AttachmentData *Data;	/* required element of type ns2:AttachmentData */
};
#endif

#ifndef SOAP_TYPE_ns2__SystemDateTime
#define SOAP_TYPE_ns2__SystemDateTime (346)
/* ns2:SystemDateTime */
struct ns2__SystemDateTime
{
	enum ns2__SetDateTimeType DateTimeType;	/* required element of type ns2:SetDateTimeType */
	enum xsd__boolean DaylightSavings;	/* required element of type xsd:boolean */
	struct ns2__TimeZone *TimeZone;	/* optional element of type ns2:TimeZone */
	struct ns2__DateTime *UTCDateTime;	/* optional element of type ns2:DateTime */
	struct ns2__DateTime *LocalDateTime;	/* optional element of type ns2:DateTime */
	struct ns2__SystemDateTimeExtension *Extension;	/* optional element of type ns2:SystemDateTimeExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__SystemDateTimeExtension
#define SOAP_TYPE_ns2__SystemDateTimeExtension (351)
/* ns2:SystemDateTimeExtension */
struct ns2__SystemDateTimeExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__DateTime
#define SOAP_TYPE_ns2__DateTime (349)
/* ns2:DateTime */
struct ns2__DateTime
{
	struct ns2__Time *Time;	/* required element of type ns2:Time */
	struct ns2__Date *Date;	/* required element of type ns2:Date */
};
#endif

#ifndef SOAP_TYPE_ns2__Date
#define SOAP_TYPE_ns2__Date (355)
/* ns2:Date */
struct ns2__Date
{
	int Year;	/* required element of type xsd:int */
	int Month;	/* required element of type xsd:int */
	int Day;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__Time
#define SOAP_TYPE_ns2__Time (353)
/* ns2:Time */
struct ns2__Time
{
	int Hour;	/* required element of type xsd:int */
	int Minute;	/* required element of type xsd:int */
	int Second;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns2__TimeZone
#define SOAP_TYPE_ns2__TimeZone (347)
/* ns2:TimeZone */
struct ns2__TimeZone
{
	char *TZ;	/* required element of type xsd:token */
};
#endif

#ifndef SOAP_TYPE_ns2__CertificateGenerationParameters
#define SOAP_TYPE_ns2__CertificateGenerationParameters (357)
/* ns2:CertificateGenerationParameters */
struct ns2__CertificateGenerationParameters
{
	char *CertificateID;	/* optional element of type xsd:token */
	char *Subject;	/* optional element of type xsd:string */
	char *ValidNotBefore;	/* optional element of type xsd:token */
	char *ValidNotAfter;	/* optional element of type xsd:token */
	struct ns2__CertificateGenerationParametersExtension *Extension;	/* optional element of type ns2:CertificateGenerationParametersExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__CertificateGenerationParametersExtension
#define SOAP_TYPE_ns2__CertificateGenerationParametersExtension (358)
/* ns2:CertificateGenerationParametersExtension */
struct ns2__CertificateGenerationParametersExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__Certificate
#define SOAP_TYPE_ns2__Certificate (360)
/* ns2:Certificate */
struct ns2__Certificate
{
	char *CertificateID;	/* required element of type xsd:token */
	struct ns2__BinaryData *Certificate;	/* required element of type ns2:BinaryData */
};
#endif

#ifndef SOAP_TYPE_ns2__CertificateStatus
#define SOAP_TYPE_ns2__CertificateStatus (362)
/* ns2:CertificateStatus */
struct ns2__CertificateStatus
{
	char *CertificateID;	/* required element of type xsd:token */
	enum xsd__boolean Status;	/* required element of type xsd:boolean */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__RelayOutputSettings
#define SOAP_TYPE_ns2__RelayOutputSettings (363)
/* ns2:RelayOutputSettings */
struct ns2__RelayOutputSettings
{
	enum ns2__RelayMode Mode;	/* required element of type ns2:RelayMode */
	LONG64 DelayTime;	/* external */
	enum ns2__RelayIdleState IdleState;	/* required element of type ns2:RelayIdleState */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZNodeExtension
#define SOAP_TYPE_ns2__PTZNodeExtension (364)
/* ns2:PTZNodeExtension */
struct ns2__PTZNodeExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__PTZConfigurationExtension
#define SOAP_TYPE_ns2__PTZConfigurationExtension (365)
/* ns2:PTZConfigurationExtension */
struct ns2__PTZConfigurationExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__PTZConfigurationOptions
#define SOAP_TYPE_ns2__PTZConfigurationOptions (366)
/* ns2:PTZConfigurationOptions */
struct ns2__PTZConfigurationOptions
{
	struct ns2__PTZSpaces *Spaces;	/* required element of type ns2:PTZSpaces */
	struct ns2__DurationRange *PTZTimeout;	/* required element of type ns2:DurationRange */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__PanTiltLimits
#define SOAP_TYPE_ns2__PanTiltLimits (370)
/* ns2:PanTiltLimits */
struct ns2__PanTiltLimits
{
	struct ns2__Space2DDescription *Range;	/* required element of type ns2:Space2DDescription */
};
#endif

#ifndef SOAP_TYPE_ns2__ZoomLimits
#define SOAP_TYPE_ns2__ZoomLimits (373)
/* ns2:ZoomLimits */
struct ns2__ZoomLimits
{
	struct ns2__Space1DDescription *Range;	/* required element of type ns2:Space1DDescription */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZSpaces
#define SOAP_TYPE_ns2__PTZSpaces (367)
/* ns2:PTZSpaces */
struct ns2__PTZSpaces
{
	int __sizeAbsolutePanTiltPositionSpace;	/* sequence of elements <AbsolutePanTiltPositionSpace> */
	struct ns2__Space2DDescription *AbsolutePanTiltPositionSpace;	/* optional element of type ns2:Space2DDescription */
	int __sizeAbsoluteZoomPositionSpace;	/* sequence of elements <AbsoluteZoomPositionSpace> */
	struct ns2__Space1DDescription *AbsoluteZoomPositionSpace;	/* optional element of type ns2:Space1DDescription */
	int __sizeRelativePanTiltTranslationSpace;	/* sequence of elements <RelativePanTiltTranslationSpace> */
	struct ns2__Space2DDescription *RelativePanTiltTranslationSpace;	/* optional element of type ns2:Space2DDescription */
	int __sizeRelativeZoomTranslationSpace;	/* sequence of elements <RelativeZoomTranslationSpace> */
	struct ns2__Space1DDescription *RelativeZoomTranslationSpace;	/* optional element of type ns2:Space1DDescription */
	int __sizeContinuousPanTiltVelocitySpace;	/* sequence of elements <ContinuousPanTiltVelocitySpace> */
	struct ns2__Space2DDescription *ContinuousPanTiltVelocitySpace;	/* optional element of type ns2:Space2DDescription */
	int __sizeContinuousZoomVelocitySpace;	/* sequence of elements <ContinuousZoomVelocitySpace> */
	struct ns2__Space1DDescription *ContinuousZoomVelocitySpace;	/* optional element of type ns2:Space1DDescription */
	int __sizePanTiltSpeedSpace;	/* sequence of elements <PanTiltSpeedSpace> */
	struct ns2__Space1DDescription *PanTiltSpeedSpace;	/* optional element of type ns2:Space1DDescription */
	int __sizeZoomSpeedSpace;	/* sequence of elements <ZoomSpeedSpace> */
	struct ns2__Space1DDescription *ZoomSpeedSpace;	/* optional element of type ns2:Space1DDescription */
	struct ns2__PTZSpacesExtension *Extension;	/* optional element of type ns2:PTZSpacesExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZSpacesExtension
#define SOAP_TYPE_ns2__PTZSpacesExtension (376)
/* ns2:PTZSpacesExtension */
struct ns2__PTZSpacesExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__Space2DDescription
#define SOAP_TYPE_ns2__Space2DDescription (371)
/* ns2:Space2DDescription */
struct ns2__Space2DDescription
{
	char *URI;	/* required element of type xsd:anyURI */
	struct ns2__FloatRange *XRange;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *YRange;	/* required element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__Space1DDescription
#define SOAP_TYPE_ns2__Space1DDescription (374)
/* ns2:Space1DDescription */
struct ns2__Space1DDescription
{
	char *URI;	/* required element of type xsd:anyURI */
	struct ns2__FloatRange *XRange;	/* required element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__Vector2D
#define SOAP_TYPE_ns2__Vector2D (379)
/* ns2:Vector2D */
struct ns2__Vector2D
{
	float x;	/* required attribute of type xsd:float */
	float y;	/* required attribute of type xsd:float */
	char *space;	/* optional attribute of type xsd:anyURI */
};
#endif

#ifndef SOAP_TYPE_ns2__Vector1D
#define SOAP_TYPE_ns2__Vector1D (380)
/* ns2:Vector1D */
struct ns2__Vector1D
{
	float x;	/* required attribute of type xsd:float */
	char *space;	/* optional attribute of type xsd:anyURI */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZVector
#define SOAP_TYPE_ns2__PTZVector (381)
/* ns2:PTZVector */
struct ns2__PTZVector
{
	struct ns2__Vector2D *PanTilt;	/* optional element of type ns2:Vector2D */
	struct ns2__Vector1D *Zoom;	/* optional element of type ns2:Vector1D */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZSpeed
#define SOAP_TYPE_ns2__PTZSpeed (384)
/* ns2:PTZSpeed */
struct ns2__PTZSpeed
{
	struct ns2__Vector2D *PanTilt;	/* optional element of type ns2:Vector2D */
	struct ns2__Vector1D *Zoom;	/* optional element of type ns2:Vector1D */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZStatus
#define SOAP_TYPE_ns2__PTZStatus (385)
/* ns2:PTZStatus */
struct ns2__PTZStatus
{
	struct ns2__PTZVector *Position;	/* optional element of type ns2:PTZVector */
	struct ns2__PTZMoveStatus *MoveStatus;	/* optional element of type ns2:PTZMoveStatus */
	char *Error;	/* optional element of type xsd:string */
	time_t UtcTime;	/* required element of type xsd:dateTime */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZPreset
#define SOAP_TYPE_ns2__PTZPreset (390)
/* ns2:PTZPreset */
struct ns2__PTZPreset
{
	char *Name;	/* optional element of type ns2:Name */
	struct ns2__PTZVector *PTZPosition;	/* optional element of type ns2:PTZVector */
	char *token;	/* optional attribute of type ns2:ReferenceToken */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZMoveStatus
#define SOAP_TYPE_ns2__PTZMoveStatus (387)
/* ns2:PTZMoveStatus */
struct ns2__PTZMoveStatus
{
	enum ns2__MoveStatus *PanTilt;	/* optional element of type ns2:MoveStatus */
	enum ns2__MoveStatus *Zoom;	/* optional element of type ns2:MoveStatus */
};
#endif

#ifndef SOAP_TYPE_ns2__ImagingStatus
#define SOAP_TYPE_ns2__ImagingStatus (392)
/* ns2:ImagingStatus */
struct ns2__ImagingStatus
{
	struct ns2__FocusStatus *FocusStatus;	/* required element of type ns2:FocusStatus */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__FocusStatus
#define SOAP_TYPE_ns2__FocusStatus (393)
/* ns2:FocusStatus */
struct ns2__FocusStatus
{
	float Position;	/* required element of type xsd:float */
	enum ns2__MoveStatus MoveStatus;	/* required element of type ns2:MoveStatus */
	char *Error;	/* required element of type xsd:string */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__FocusConfiguration
#define SOAP_TYPE_ns2__FocusConfiguration (395)
/* ns2:FocusConfiguration */
struct ns2__FocusConfiguration
{
	enum ns2__AutoFocusMode AutoFocusMode;	/* required element of type ns2:AutoFocusMode */
	float DefaultSpeed;	/* required element of type xsd:float */
	float NearLimit;	/* required element of type xsd:float */
	float FarLimit;	/* required element of type xsd:float */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ImagingSettings
#define SOAP_TYPE_ns2__ImagingSettings (396)
/* ns2:ImagingSettings */
struct ns2__ImagingSettings
{
	struct ns2__BacklightCompensation *BacklightCompensation;	/* optional element of type ns2:BacklightCompensation */
	float *Brightness;	/* optional element of type xsd:float */
	float *ColorSaturation;	/* optional element of type xsd:float */
	float *Contrast;	/* optional element of type xsd:float */
	struct ns2__Exposure *Exposure;	/* optional element of type ns2:Exposure */
	struct ns2__FocusConfiguration *Focus;	/* optional element of type ns2:FocusConfiguration */
	enum ns2__IrCutFilterMode *IrCutFilter;	/* optional element of type ns2:IrCutFilterMode */
	float *Sharpness;	/* optional element of type xsd:float */
	struct ns2__WideDynamicRange *WideDynamicRange;	/* optional element of type ns2:WideDynamicRange */
	struct ns2__WhiteBalance *WhiteBalance;	/* optional element of type ns2:WhiteBalance */
	struct ns2__ImagingSettingsExtension *Extension;	/* optional element of type ns2:ImagingSettingsExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ImagingSettingsExtension
#define SOAP_TYPE_ns2__ImagingSettingsExtension (408)
/* ns2:ImagingSettingsExtension */
struct ns2__ImagingSettingsExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__Exposure
#define SOAP_TYPE_ns2__Exposure (400)
/* ns2:Exposure */
struct ns2__Exposure
{
	enum ns2__ExposureMode Mode;	/* required element of type ns2:ExposureMode */
	enum ns2__ExposurePriority Priority;	/* required element of type ns2:ExposurePriority */
	struct ns2__Rectangle *Window;	/* required element of type ns2:Rectangle */
	float MinExposureTime;	/* required element of type xsd:float */
	float MaxExposureTime;	/* required element of type xsd:float */
	float MinGain;	/* required element of type xsd:float */
	float MaxGain;	/* required element of type xsd:float */
	float MinIris;	/* required element of type xsd:float */
	float MaxIris;	/* required element of type xsd:float */
	float ExposureTime;	/* required element of type xsd:float */
	float Gain;	/* required element of type xsd:float */
	float Iris;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__WideDynamicRange
#define SOAP_TYPE_ns2__WideDynamicRange (404)
/* ns2:WideDynamicRange */
struct ns2__WideDynamicRange
{
	enum ns2__WideDynamicMode Mode;	/* required element of type ns2:WideDynamicMode */
	float Level;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__BacklightCompensation
#define SOAP_TYPE_ns2__BacklightCompensation (397)
/* ns2:BacklightCompensation */
struct ns2__BacklightCompensation
{
	enum ns2__BacklightCompensationMode Mode;	/* required element of type ns2:BacklightCompensationMode */
	float Level;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__ImagingOptions
#define SOAP_TYPE_ns2__ImagingOptions (412)
/* ns2:ImagingOptions */
struct ns2__ImagingOptions
{
	struct ns2__BacklightCompensationOptions *BacklightCompensation;	/* required element of type ns2:BacklightCompensationOptions */
	struct ns2__FloatRange *Brightness;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *ColorSaturation;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *Contrast;	/* required element of type ns2:FloatRange */
	struct ns2__ExposureOptions *Exposure;	/* required element of type ns2:ExposureOptions */
	struct ns2__FocusOptions *Focus;	/* required element of type ns2:FocusOptions */
	int __sizeIrCutFilterModes;	/* sequence of elements <IrCutFilterModes> */
	enum ns2__IrCutFilterMode *IrCutFilterModes;	/* required element of type ns2:IrCutFilterMode */
	struct ns2__FloatRange *Sharpness;	/* required element of type ns2:FloatRange */
	struct ns2__WideDynamicRangeOptions *WideDynamicRange;	/* required element of type ns2:WideDynamicRangeOptions */
	struct ns2__WhiteBalanceOptions *WhiteBalance;	/* required element of type ns2:WhiteBalanceOptions */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__WideDynamicRangeOptions
#define SOAP_TYPE_ns2__WideDynamicRangeOptions (419)
/* ns2:WideDynamicRangeOptions */
struct ns2__WideDynamicRangeOptions
{
	int __sizeMode;	/* sequence of elements <Mode> */
	enum ns2__WideDynamicMode *Mode;	/* required element of type ns2:WideDynamicMode */
	struct ns2__FloatRange *Level;	/* required element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__BacklightCompensationOptions
#define SOAP_TYPE_ns2__BacklightCompensationOptions (413)
/* ns2:BacklightCompensationOptions */
struct ns2__BacklightCompensationOptions
{
	int __sizeMode;	/* sequence of elements <Mode> */
	enum ns2__WideDynamicMode *Mode;	/* required element of type ns2:WideDynamicMode */
	struct ns2__FloatRange *Level;	/* required element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__FocusOptions
#define SOAP_TYPE_ns2__FocusOptions (417)
/* ns2:FocusOptions */
struct ns2__FocusOptions
{
	int __sizeAutoFocusModes;	/* sequence of elements <AutoFocusModes> */
	enum ns2__AutoFocusMode *AutoFocusModes;	/* optional element of type ns2:AutoFocusMode */
	struct ns2__FloatRange *DefaultSpeed;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *NearLimit;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *FarLimit;	/* required element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__ExposureOptions
#define SOAP_TYPE_ns2__ExposureOptions (415)
/* ns2:ExposureOptions */
struct ns2__ExposureOptions
{
	int __sizeMode;	/* sequence of elements <Mode> */
	enum ns2__ExposureMode *Mode;	/* required element of type ns2:ExposureMode */
	int __sizePriority;	/* sequence of elements <Priority> */
	enum ns2__ExposurePriority *Priority;	/* required element of type ns2:ExposurePriority */
	struct ns2__FloatRange *MinExposureTime;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *MaxExposureTime;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *MinGain;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *MaxGain;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *MinIris;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *MaxIris;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *ExposureTime;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *Gain;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *Iris;	/* required element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__WhiteBalanceOptions
#define SOAP_TYPE_ns2__WhiteBalanceOptions (421)
/* ns2:WhiteBalanceOptions */
struct ns2__WhiteBalanceOptions
{
	int __sizeMode;	/* sequence of elements <Mode> */
	enum ns2__WhiteBalanceMode *Mode;	/* required element of type ns2:WhiteBalanceMode */
	struct ns2__FloatRange *YrGain;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *YbGain;	/* required element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__FocusMove
#define SOAP_TYPE_ns2__FocusMove (428)
/* ns2:FocusMove */
struct ns2__FocusMove
{
	struct ns2__AbsoluteFocus *Absolute;	/* optional element of type ns2:AbsoluteFocus */
	struct ns2__RelativeFocus *Relative;	/* optional element of type ns2:RelativeFocus */
	struct ns2__ContinuousFocus *Continuous;	/* optional element of type ns2:ContinuousFocus */
};
#endif

#ifndef SOAP_TYPE_ns2__AbsoluteFocus
#define SOAP_TYPE_ns2__AbsoluteFocus (429)
/* ns2:AbsoluteFocus */
struct ns2__AbsoluteFocus
{
	float Position;	/* required element of type xsd:float */
	float *Speed;	/* optional element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__RelativeFocus
#define SOAP_TYPE_ns2__RelativeFocus (431)
/* ns2:RelativeFocus */
struct ns2__RelativeFocus
{
	float Distance;	/* required element of type xsd:float */
	float *Speed;	/* optional element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__ContinuousFocus
#define SOAP_TYPE_ns2__ContinuousFocus (433)
/* ns2:ContinuousFocus */
struct ns2__ContinuousFocus
{
	float Speed;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__MoveOptions
#define SOAP_TYPE_ns2__MoveOptions (435)
/* ns2:MoveOptions */
struct ns2__MoveOptions
{
	struct ns2__AbsoluteFocusOptions *Absolute;	/* optional element of type ns2:AbsoluteFocusOptions */
	struct ns2__RelativeFocusOptions *Relative;	/* optional element of type ns2:RelativeFocusOptions */
	struct ns2__ContinuousFocusOptions *Continuous;	/* optional element of type ns2:ContinuousFocusOptions */
};
#endif

#ifndef SOAP_TYPE_ns2__AbsoluteFocusOptions
#define SOAP_TYPE_ns2__AbsoluteFocusOptions (436)
/* ns2:AbsoluteFocusOptions */
struct ns2__AbsoluteFocusOptions
{
	struct ns2__FloatRange *Position;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *Speed;	/* optional element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__RelativeFocusOptions
#define SOAP_TYPE_ns2__RelativeFocusOptions (438)
/* ns2:RelativeFocusOptions */
struct ns2__RelativeFocusOptions
{
	struct ns2__FloatRange *Distance;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *Speed;	/* required element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__ContinuousFocusOptions
#define SOAP_TYPE_ns2__ContinuousFocusOptions (440)
/* ns2:ContinuousFocusOptions */
struct ns2__ContinuousFocusOptions
{
	struct ns2__FloatRange *Speed;	/* required element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__WhiteBalance
#define SOAP_TYPE_ns2__WhiteBalance (406)
/* ns2:WhiteBalance */
struct ns2__WhiteBalance
{
	enum ns2__WhiteBalanceMode Mode;	/* required element of type ns2:WhiteBalanceMode */
	float CrGain;	/* required element of type xsd:float */
	float CbGain;	/* required element of type xsd:float */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ImagingStatus20
#define SOAP_TYPE_ns2__ImagingStatus20 (442)
/* ns2:ImagingStatus20 */
struct ns2__ImagingStatus20
{
	struct ns2__FocusStatus20 *FocusStatus20;	/* optional element of type ns2:FocusStatus20 */
	struct ns2__ImagingStatus20Extension *Extension;	/* optional element of type ns2:ImagingStatus20Extension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ImagingStatus20Extension
#define SOAP_TYPE_ns2__ImagingStatus20Extension (445)
/* ns2:ImagingStatus20Extension */
struct ns2__ImagingStatus20Extension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__FocusStatus20
#define SOAP_TYPE_ns2__FocusStatus20 (443)
/* ns2:FocusStatus20 */
struct ns2__FocusStatus20
{
	float Position;	/* required element of type xsd:float */
	enum ns2__MoveStatus MoveStatus;	/* required element of type ns2:MoveStatus */
	char *Error;	/* optional element of type xsd:string */
	struct ns2__FocusStatus20Extension *Extension;	/* optional element of type ns2:FocusStatus20Extension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__FocusStatus20Extension
#define SOAP_TYPE_ns2__FocusStatus20Extension (447)
/* ns2:FocusStatus20Extension */
struct ns2__FocusStatus20Extension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__ImagingSettings20
#define SOAP_TYPE_ns2__ImagingSettings20 (449)
/* ns2:ImagingSettings20 */
struct ns2__ImagingSettings20
{
	struct ns2__BacklightCompensation20 *BacklightCompensation;	/* optional element of type ns2:BacklightCompensation20 */
	float *Brightness;	/* optional element of type xsd:float */
	float *ColorSaturation;	/* optional element of type xsd:float */
	float *Contrast;	/* optional element of type xsd:float */
	struct ns2__Exposure20 *Exposure;	/* optional element of type ns2:Exposure20 */
	struct ns2__FocusConfiguration20 *Focus;	/* optional element of type ns2:FocusConfiguration20 */
	enum ns2__IrCutFilterMode *IrCutFilter;	/* optional element of type ns2:IrCutFilterMode */
	float *Sharpness;	/* optional element of type xsd:float */
	struct ns2__WideDynamicRange20 *WideDynamicRange;	/* optional element of type ns2:WideDynamicRange20 */
	struct ns2__WhiteBalance20 *WhiteBalance;	/* optional element of type ns2:WhiteBalance20 */
	struct ns2__ImagingSettingsExtension20 *Extension;	/* optional element of type ns2:ImagingSettingsExtension20 */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ImagingSettingsExtension20
#define SOAP_TYPE_ns2__ImagingSettingsExtension20 (460)
/* ns2:ImagingSettingsExtension20 */
struct ns2__ImagingSettingsExtension20
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__WideDynamicRange20
#define SOAP_TYPE_ns2__WideDynamicRange20 (456)
/* ns2:WideDynamicRange20 */
struct ns2__WideDynamicRange20
{
	enum ns2__WideDynamicMode Mode;	/* required element of type ns2:WideDynamicMode */
	float *Level;	/* optional element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__BacklightCompensation20
#define SOAP_TYPE_ns2__BacklightCompensation20 (450)
/* ns2:BacklightCompensation20 */
struct ns2__BacklightCompensation20
{
	enum ns2__BacklightCompensationMode Mode;	/* required element of type ns2:BacklightCompensationMode */
	float *Level;	/* optional element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__Exposure20
#define SOAP_TYPE_ns2__Exposure20 (452)
/* ns2:Exposure20 */
struct ns2__Exposure20
{
	enum ns2__ExposureMode Mode;	/* required element of type ns2:ExposureMode */
	enum ns2__ExposurePriority *Priority;	/* optional element of type ns2:ExposurePriority */
	struct ns2__Rectangle *Window;	/* optional element of type ns2:Rectangle */
	float *MinExposureTime;	/* optional element of type xsd:float */
	float *MaxExposureTime;	/* optional element of type xsd:float */
	float *MinGain;	/* optional element of type xsd:float */
	float *MaxGain;	/* optional element of type xsd:float */
	float *MinIris;	/* optional element of type xsd:float */
	float *MaxIris;	/* optional element of type xsd:float */
	float *ExposureTime;	/* optional element of type xsd:float */
	float *Gain;	/* optional element of type xsd:float */
	float *Iris;	/* optional element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__ImagingOptions20
#define SOAP_TYPE_ns2__ImagingOptions20 (462)
/* ns2:ImagingOptions20 */
struct ns2__ImagingOptions20
{
	struct ns2__BacklightCompensationOptions20 *BacklightCompensation;	/* optional element of type ns2:BacklightCompensationOptions20 */
	struct ns2__FloatRange *Brightness;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *ColorSaturation;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *Contrast;	/* optional element of type ns2:FloatRange */
	struct ns2__ExposureOptions20 *Exposure;	/* optional element of type ns2:ExposureOptions20 */
	struct ns2__FocusOptions20 *Focus;	/* optional element of type ns2:FocusOptions20 */
	int __sizeIrCutFilterModes;	/* sequence of elements <IrCutFilterModes> */
	enum ns2__IrCutFilterMode *IrCutFilterModes;	/* optional element of type ns2:IrCutFilterMode */
	struct ns2__FloatRange *Sharpness;	/* optional element of type ns2:FloatRange */
	struct ns2__WideDynamicRangeOptions20 *WideDynamicRange;	/* optional element of type ns2:WideDynamicRangeOptions20 */
	struct ns2__WhiteBalanceOptions20 *WhiteBalance;	/* optional element of type ns2:WhiteBalanceOptions20 */
	struct ns2__ImagingOptions20Extension *Extension;	/* optional element of type ns2:ImagingOptions20Extension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ImagingOptions20Extension
#define SOAP_TYPE_ns2__ImagingOptions20Extension (473)
/* ns2:ImagingOptions20Extension */
struct ns2__ImagingOptions20Extension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__WideDynamicRangeOptions20
#define SOAP_TYPE_ns2__WideDynamicRangeOptions20 (469)
/* ns2:WideDynamicRangeOptions20 */
struct ns2__WideDynamicRangeOptions20
{
	int __sizeMode;	/* sequence of elements <Mode> */
	enum ns2__WideDynamicMode *Mode;	/* required element of type ns2:WideDynamicMode */
	struct ns2__FloatRange *Level;	/* optional element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__BacklightCompensationOptions20
#define SOAP_TYPE_ns2__BacklightCompensationOptions20 (463)
/* ns2:BacklightCompensationOptions20 */
struct ns2__BacklightCompensationOptions20
{
	int __sizeMode;	/* sequence of elements <Mode> */
	enum ns2__BacklightCompensationMode *Mode;	/* required element of type ns2:BacklightCompensationMode */
	struct ns2__FloatRange *Level;	/* optional element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__ExposureOptions20
#define SOAP_TYPE_ns2__ExposureOptions20 (465)
/* ns2:ExposureOptions20 */
struct ns2__ExposureOptions20
{
	int __sizeMode;	/* sequence of elements <Mode> */
	enum ns2__ExposureMode *Mode;	/* required element of type ns2:ExposureMode */
	int __sizePriority;	/* sequence of elements <Priority> */
	enum ns2__ExposurePriority *Priority;	/* optional element of type ns2:ExposurePriority */
	struct ns2__FloatRange *MinExposureTime;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *MaxExposureTime;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *MinGain;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *MaxGain;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *MinIris;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *MaxIris;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *ExposureTime;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *Gain;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *Iris;	/* optional element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__MoveOptions20
#define SOAP_TYPE_ns2__MoveOptions20 (476)
/* ns2:MoveOptions20 */
struct ns2__MoveOptions20
{
	struct ns2__AbsoluteFocusOptions *Absolute;	/* optional element of type ns2:AbsoluteFocusOptions */
	struct ns2__RelativeFocusOptions20 *Relative;	/* optional element of type ns2:RelativeFocusOptions20 */
	struct ns2__ContinuousFocusOptions *Continuous;	/* optional element of type ns2:ContinuousFocusOptions */
};
#endif

#ifndef SOAP_TYPE_ns2__RelativeFocusOptions20
#define SOAP_TYPE_ns2__RelativeFocusOptions20 (477)
/* ns2:RelativeFocusOptions20 */
struct ns2__RelativeFocusOptions20
{
	struct ns2__FloatRange *Distance;	/* required element of type ns2:FloatRange */
	struct ns2__FloatRange *Speed;	/* optional element of type ns2:FloatRange */
};
#endif

#ifndef SOAP_TYPE_ns2__WhiteBalance20
#define SOAP_TYPE_ns2__WhiteBalance20 (458)
/* ns2:WhiteBalance20 */
struct ns2__WhiteBalance20
{
	enum ns2__WhiteBalanceMode Mode;	/* required element of type ns2:WhiteBalanceMode */
	float *CrGain;	/* optional element of type xsd:float */
	float *CbGain;	/* optional element of type xsd:float */
	struct ns2__WhiteBalance20Extension *Extension;	/* optional element of type ns2:WhiteBalance20Extension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__WhiteBalance20Extension
#define SOAP_TYPE_ns2__WhiteBalance20Extension (479)
/* ns2:WhiteBalance20Extension */
struct ns2__WhiteBalance20Extension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__FocusConfiguration20
#define SOAP_TYPE_ns2__FocusConfiguration20 (454)
/* ns2:FocusConfiguration20 */
struct ns2__FocusConfiguration20
{
	enum ns2__AutoFocusMode AutoFocusMode;	/* required element of type ns2:AutoFocusMode */
	float *DefaultSpeed;	/* optional element of type xsd:float */
	float *NearLimit;	/* optional element of type xsd:float */
	float *FarLimit;	/* optional element of type xsd:float */
	struct ns2__FocusConfiguration20Extension *Extension;	/* required element of type ns2:FocusConfiguration20Extension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__FocusConfiguration20Extension
#define SOAP_TYPE_ns2__FocusConfiguration20Extension (481)
/* ns2:FocusConfiguration20Extension */
struct ns2__FocusConfiguration20Extension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__WhiteBalanceOptions20
#define SOAP_TYPE_ns2__WhiteBalanceOptions20 (471)
/* ns2:WhiteBalanceOptions20 */
struct ns2__WhiteBalanceOptions20
{
	int __sizeMode;	/* sequence of elements <Mode> */
	enum ns2__WhiteBalanceMode *Mode;	/* required element of type ns2:WhiteBalanceMode */
	struct ns2__FloatRange *YrGain;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *YbGain;	/* optional element of type ns2:FloatRange */
	struct ns2__WhiteBalanceOptions20Extension *Extension;	/* optional element of type ns2:WhiteBalanceOptions20Extension */
};
#endif

#ifndef SOAP_TYPE_ns2__WhiteBalanceOptions20Extension
#define SOAP_TYPE_ns2__WhiteBalanceOptions20Extension (483)
/* ns2:WhiteBalanceOptions20Extension */
struct ns2__WhiteBalanceOptions20Extension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__FocusOptions20
#define SOAP_TYPE_ns2__FocusOptions20 (467)
/* ns2:FocusOptions20 */
struct ns2__FocusOptions20
{
	int __sizeAutoFocusModes;	/* sequence of elements <AutoFocusModes> */
	enum ns2__AutoFocusMode *AutoFocusModes;	/* optional element of type ns2:AutoFocusMode */
	struct ns2__FloatRange *DefaultSpeed;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *NearLimit;	/* optional element of type ns2:FloatRange */
	struct ns2__FloatRange *FarLimit;	/* optional element of type ns2:FloatRange */
	struct ns2__FocusOptions20Extension *Extension;	/* optional element of type ns2:FocusOptions20Extension */
};
#endif

#ifndef SOAP_TYPE_ns2__FocusOptions20Extension
#define SOAP_TYPE_ns2__FocusOptions20Extension (485)
/* ns2:FocusOptions20Extension */
struct ns2__FocusOptions20Extension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__MessageExtension
#define SOAP_TYPE_ns2__MessageExtension (487)
/* ns2:MessageExtension */
struct ns2__MessageExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE__ns2__ItemList_SimpleItem
#define SOAP_TYPE__ns2__ItemList_SimpleItem (489)
/* ns2:ItemList-SimpleItem */
struct _ns2__ItemList_SimpleItem
{
	char *Name;	/* required attribute of type xsd:string */
	char *Value;	/* required attribute of type xsd:anySimpleType */
};
#endif

#ifndef SOAP_TYPE__ns2__ItemList_ElementItem
#define SOAP_TYPE__ns2__ItemList_ElementItem (491)
/* ns2:ItemList-ElementItem */
struct _ns2__ItemList_ElementItem
{
	char *__any;
	char *Name;	/* required attribute of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__ItemList
#define SOAP_TYPE_ns2__ItemList (488)
/* ns2:ItemList */
struct ns2__ItemList
{
	int __sizeSimpleItem;	/* sequence of elements <SimpleItem> */
	struct _ns2__ItemList_SimpleItem *SimpleItem;	/* optional element of type ns2:ItemList-SimpleItem */
	int __sizeElementItem;	/* sequence of elements <ElementItem> */
	struct _ns2__ItemList_ElementItem *ElementItem;	/* optional element of type ns2:ItemList-ElementItem */
	struct ns2__ItemListExtension *Extension;	/* optional element of type ns2:ItemListExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ItemListExtension
#define SOAP_TYPE_ns2__ItemListExtension (493)
/* ns2:ItemListExtension */
struct ns2__ItemListExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__MessageDescription
#define SOAP_TYPE_ns2__MessageDescription (495)
/* ns2:MessageDescription */
struct ns2__MessageDescription
{
	struct ns2__ItemListDescription *Source;	/* optional element of type ns2:ItemListDescription */
	struct ns2__ItemListDescription *Key;	/* optional element of type ns2:ItemListDescription */
	struct ns2__ItemListDescription *Data;	/* optional element of type ns2:ItemListDescription */
	struct ns2__MessageDescriptionExtension *Extension;	/* optional element of type ns2:MessageDescriptionExtension */
	enum xsd__boolean *IsProperty;	/* optional attribute of type xsd:boolean */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__MessageDescriptionExtension
#define SOAP_TYPE_ns2__MessageDescriptionExtension (498)
/* ns2:MessageDescriptionExtension */
struct ns2__MessageDescriptionExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE__ns2__ItemListDescription_SimpleItemDescription
#define SOAP_TYPE__ns2__ItemListDescription_SimpleItemDescription (500)
/* ns2:ItemListDescription-SimpleItemDescription */
struct _ns2__ItemListDescription_SimpleItemDescription
{
	char *Name;	/* required attribute of type xsd:string */
	char *Type;	/* required attribute of type xsd:QName */
};
#endif

#ifndef SOAP_TYPE__ns2__ItemListDescription_ElementItemDescription
#define SOAP_TYPE__ns2__ItemListDescription_ElementItemDescription (502)
/* ns2:ItemListDescription-ElementItemDescription */
struct _ns2__ItemListDescription_ElementItemDescription
{
	char *Name;	/* required attribute of type xsd:string */
	char *Type;	/* required attribute of type xsd:QName */
};
#endif

#ifndef SOAP_TYPE_ns2__ItemListDescription
#define SOAP_TYPE_ns2__ItemListDescription (496)
/* ns2:ItemListDescription */
struct ns2__ItemListDescription
{
	int __sizeSimpleItemDescription;	/* sequence of elements <SimpleItemDescription> */
	struct _ns2__ItemListDescription_SimpleItemDescription *SimpleItemDescription;	/* optional element of type ns2:ItemListDescription-SimpleItemDescription */
	int __sizeElementItemDescription;	/* sequence of elements <ElementItemDescription> */
	struct _ns2__ItemListDescription_ElementItemDescription *ElementItemDescription;	/* optional element of type ns2:ItemListDescription-ElementItemDescription */
	struct ns2__ItemListDescriptionExtension *Extension;	/* optional element of type ns2:ItemListDescriptionExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ItemListDescriptionExtension
#define SOAP_TYPE_ns2__ItemListDescriptionExtension (504)
/* ns2:ItemListDescriptionExtension */
struct ns2__ItemListDescriptionExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__Vector
#define SOAP_TYPE_ns2__Vector (506)
/* ns2:Vector */
struct ns2__Vector
{
	float *x;	/* optional attribute of type xsd:float */
	float *y;	/* optional attribute of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__Rectangle
#define SOAP_TYPE_ns2__Rectangle (410)
/* ns2:Rectangle */
struct ns2__Rectangle
{
	float *bottom;	/* optional attribute of type xsd:float */
	float *top;	/* optional attribute of type xsd:float */
	float *right;	/* optional attribute of type xsd:float */
	float *left;	/* optional attribute of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__Polygon
#define SOAP_TYPE_ns2__Polygon (507)
/* ns2:Polygon */
struct ns2__Polygon
{
	int __sizePoint;	/* sequence of elements <Point> */
	struct ns2__Vector *Point;	/* required element of type ns2:Vector */
};
#endif

#ifndef SOAP_TYPE_ns2__Polyline
#define SOAP_TYPE_ns2__Polyline (509)
/* ns2:Polyline */
struct ns2__Polyline
{
	int __sizePoint;	/* sequence of elements <Point> */
	struct ns2__Vector *Point;	/* required element of type ns2:Vector */
};
#endif

#ifndef SOAP_TYPE_ns2__Color
#define SOAP_TYPE_ns2__Color (510)
/* ns2:Color */
struct ns2__Color
{
	float X;	/* required attribute of type xsd:float */
	float Y;	/* required attribute of type xsd:float */
	float Z;	/* required attribute of type xsd:float */
	char *Colorspace;	/* optional attribute of type xsd:anyURI */
};
#endif

#ifndef SOAP_TYPE_ns2__ColorCovariance
#define SOAP_TYPE_ns2__ColorCovariance (511)
/* ns2:ColorCovariance */
struct ns2__ColorCovariance
{
	float XX;	/* required attribute of type xsd:float */
	float YY;	/* required attribute of type xsd:float */
	float ZZ;	/* required attribute of type xsd:float */
	float *XY;	/* optional attribute of type xsd:float */
	float *XZ;	/* optional attribute of type xsd:float */
	float *YZ;	/* optional attribute of type xsd:float */
	char *Colorspace;	/* optional attribute of type xsd:anyURI */
};
#endif

#ifndef SOAP_TYPE_ns2__Appearance
#define SOAP_TYPE_ns2__Appearance (512)
/* ns2:Appearance */
struct ns2__Appearance
{
	struct ns2__Transformation *Transformation;	/* optional element of type ns2:Transformation */
	struct ns2__ShapeDescriptor *Shape;	/* optional element of type ns2:ShapeDescriptor */
	struct ns2__ColorDescriptor *Color;	/* optional element of type ns2:ColorDescriptor */
	struct ns2__ClassDescriptor *Class;	/* optional element of type ns2:ClassDescriptor */
	struct ns2__AppearanceExtension *Extension;	/* optional element of type ns2:AppearanceExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__AppearanceExtension
#define SOAP_TYPE_ns2__AppearanceExtension (521)
/* ns2:AppearanceExtension */
struct ns2__AppearanceExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__ShapeDescriptor
#define SOAP_TYPE_ns2__ShapeDescriptor (515)
/* ns2:ShapeDescriptor */
struct ns2__ShapeDescriptor
{
	struct ns2__Rectangle *BoundingBox;	/* required element of type ns2:Rectangle */
	struct ns2__Vector *CenterOfGravity;	/* required element of type ns2:Vector */
	int __sizePolygon;	/* sequence of elements <Polygon> */
	struct ns2__Polygon *Polygon;	/* optional element of type ns2:Polygon */
	struct ns2__ShapeDescriptorExtension *Extension;	/* optional element of type ns2:ShapeDescriptorExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ShapeDescriptorExtension
#define SOAP_TYPE_ns2__ShapeDescriptorExtension (524)
/* ns2:ShapeDescriptorExtension */
struct ns2__ShapeDescriptorExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE__ns2__ColorDescriptor_ColorCluster
#define SOAP_TYPE__ns2__ColorDescriptor_ColorCluster (526)
/* ns2:ColorDescriptor-ColorCluster */
struct _ns2__ColorDescriptor_ColorCluster
{
	struct ns2__Color *Color;	/* required element of type ns2:Color */
	float *Weight;	/* optional element of type xsd:float */
	struct ns2__ColorCovariance *Covariance;	/* optional element of type ns2:ColorCovariance */
};
#endif

#ifndef SOAP_TYPE_ns2__ColorDescriptor
#define SOAP_TYPE_ns2__ColorDescriptor (517)
/* ns2:ColorDescriptor */
struct ns2__ColorDescriptor
{
	int __sizeColorCluster;	/* sequence of elements <ColorCluster> */
	struct _ns2__ColorDescriptor_ColorCluster *ColorCluster;	/* optional element of type ns2:ColorDescriptor-ColorCluster */
	struct ns2__ColorDescriptorExtension *Extension;	/* optional element of type ns2:ColorDescriptorExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ColorDescriptorExtension
#define SOAP_TYPE_ns2__ColorDescriptorExtension (530)
/* ns2:ColorDescriptorExtension */
struct ns2__ColorDescriptorExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE__ns2__ClassDescriptor_ClassCandidate
#define SOAP_TYPE__ns2__ClassDescriptor_ClassCandidate (532)
/* ns2:ClassDescriptor-ClassCandidate */
struct _ns2__ClassDescriptor_ClassCandidate
{
	enum ns2__ClassType Type;	/* required element of type ns2:ClassType */
	float Likelihood;	/* required element of type xsd:float */
};
#endif

#ifndef SOAP_TYPE_ns2__ClassDescriptor
#define SOAP_TYPE_ns2__ClassDescriptor (519)
/* ns2:ClassDescriptor */
struct ns2__ClassDescriptor
{
	int __sizeClassCandidate;	/* sequence of elements <ClassCandidate> */
	struct _ns2__ClassDescriptor_ClassCandidate *ClassCandidate;	/* optional element of type ns2:ClassDescriptor-ClassCandidate */
	struct ns2__ClassDescriptorExtension *Extension;	/* optional element of type ns2:ClassDescriptorExtension */
};
#endif

#ifndef SOAP_TYPE_ns2__ClassDescriptorExtension
#define SOAP_TYPE_ns2__ClassDescriptorExtension (534)
/* ns2:ClassDescriptorExtension */
struct ns2__ClassDescriptorExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__ObjectExtension
#define SOAP_TYPE_ns2__ObjectExtension (536)
/* ns2:ObjectExtension */
struct ns2__ObjectExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__Transformation
#define SOAP_TYPE_ns2__Transformation (513)
/* ns2:Transformation */
struct ns2__Transformation
{
	struct ns2__Vector *Translate;	/* optional element of type ns2:Vector */
	struct ns2__Vector *Scale;	/* optional element of type ns2:Vector */
	struct ns2__TransformationExtension *Extension;	/* optional element of type ns2:TransformationExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__TransformationExtension
#define SOAP_TYPE_ns2__TransformationExtension (537)
/* ns2:TransformationExtension */
struct ns2__TransformationExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__Frame
#define SOAP_TYPE_ns2__Frame (539)
/* ns2:Frame */
struct ns2__Frame
{
	struct ns2__PTZStatus *PTZStatus;	/* optional element of type ns2:PTZStatus */
	struct ns2__Transformation *Transformation;	/* optional element of type ns2:Transformation */
	int __sizeObject;	/* sequence of elements <Object> */
	struct ns2__Object *Object;	/* optional element of type ns2:Object */
	struct ns2__ObjectTree *ObjectTree;	/* optional element of type ns2:ObjectTree */
	struct ns2__FrameExtension *Extension;	/* optional element of type ns2:FrameExtension */
	time_t UtcTime;	/* required attribute of type xsd:dateTime */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__FrameExtension
#define SOAP_TYPE_ns2__FrameExtension (545)
/* ns2:FrameExtension */
struct ns2__FrameExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__Merge
#define SOAP_TYPE_ns2__Merge (547)
/* ns2:Merge */
struct ns2__Merge
{
	int __sizefrom;	/* sequence of elements <from> */
	struct ns2__ObjectId *from;	/* required element of type ns2:ObjectId */
	struct ns2__ObjectId *to;	/* required element of type ns2:ObjectId */
};
#endif

#ifndef SOAP_TYPE_ns2__Split
#define SOAP_TYPE_ns2__Split (550)
/* ns2:Split */
struct ns2__Split
{
	struct ns2__ObjectId *from;	/* required element of type ns2:ObjectId */
	int __sizeto;	/* sequence of elements <to> */
	struct ns2__ObjectId *to;	/* required element of type ns2:ObjectId */
};
#endif

#ifndef SOAP_TYPE_ns2__Rename
#define SOAP_TYPE_ns2__Rename (551)
/* ns2:Rename */
struct ns2__Rename
{
	struct ns2__ObjectId *from;	/* required element of type ns2:ObjectId */
	struct ns2__ObjectId *to;	/* required element of type ns2:ObjectId */
};
#endif

#ifndef SOAP_TYPE_ns2__ObjectId
#define SOAP_TYPE_ns2__ObjectId (548)
/* ns2:ObjectId */
struct ns2__ObjectId
{
	char *ObjectId;	/* optional attribute of type xsd:integer */
};
#endif

#ifndef SOAP_TYPE__ns2__Behaviour_Removed
#define SOAP_TYPE__ns2__Behaviour_Removed (553)
/* ns2:Behaviour-Removed */
struct _ns2__Behaviour_Removed
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE__ns2__Behaviour_Idle
#define SOAP_TYPE__ns2__Behaviour_Idle (555)
/* ns2:Behaviour-Idle */
struct _ns2__Behaviour_Idle
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__Behaviour
#define SOAP_TYPE_ns2__Behaviour (552)
/* ns2:Behaviour */
struct ns2__Behaviour
{
	struct _ns2__Behaviour_Removed *Removed;	/* optional element of type ns2:Behaviour-Removed */
	struct _ns2__Behaviour_Idle *Idle;	/* optional element of type ns2:Behaviour-Idle */
	struct ns2__BehaviourExtension *Extension;	/* optional element of type ns2:BehaviourExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__BehaviourExtension
#define SOAP_TYPE_ns2__BehaviourExtension (557)
/* ns2:BehaviourExtension */
struct ns2__BehaviourExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__ObjectTree
#define SOAP_TYPE_ns2__ObjectTree (543)
/* ns2:ObjectTree */
struct ns2__ObjectTree
{
	int __sizeRename;	/* sequence of elements <Rename> */
	struct ns2__Rename *Rename;	/* optional element of type ns2:Rename */
	int __sizeSplit;	/* sequence of elements <Split> */
	struct ns2__Split *Split;	/* optional element of type ns2:Split */
	int __sizeMerge;	/* sequence of elements <Merge> */
	struct ns2__Merge *Merge;	/* optional element of type ns2:Merge */
	int __sizeDelete;	/* sequence of elements <Delete> */
	struct ns2__ObjectId *Delete;	/* optional element of type ns2:ObjectId */
	struct ns2__ObjectTreeExtension *Extension;	/* optional element of type ns2:ObjectTreeExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ObjectTreeExtension
#define SOAP_TYPE_ns2__ObjectTreeExtension (562)
/* ns2:ObjectTreeExtension */
struct ns2__ObjectTreeExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__AnalyticsEngineConfiguration
#define SOAP_TYPE_ns2__AnalyticsEngineConfiguration (564)
/* ns2:AnalyticsEngineConfiguration */
struct ns2__AnalyticsEngineConfiguration
{
	int __sizeAnalyticsModule;	/* sequence of elements <AnalyticsModule> */
	struct ns2__Config *AnalyticsModule;	/* optional element of type ns2:Config */
	struct ns2__AnalyticsEngineConfigurationExtension *Extension;	/* optional element of type ns2:AnalyticsEngineConfigurationExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__AnalyticsEngineConfigurationExtension
#define SOAP_TYPE_ns2__AnalyticsEngineConfigurationExtension (567)
/* ns2:AnalyticsEngineConfigurationExtension */
struct ns2__AnalyticsEngineConfigurationExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__RuleEngineConfiguration
#define SOAP_TYPE_ns2__RuleEngineConfiguration (569)
/* ns2:RuleEngineConfiguration */
struct ns2__RuleEngineConfiguration
{
	int __sizeRule;	/* sequence of elements <Rule> */
	struct ns2__Config *Rule;	/* optional element of type ns2:Config */
	struct ns2__RuleEngineConfigurationExtension *Extension;	/* optional element of type ns2:RuleEngineConfigurationExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__RuleEngineConfigurationExtension
#define SOAP_TYPE_ns2__RuleEngineConfigurationExtension (570)
/* ns2:RuleEngineConfigurationExtension */
struct ns2__RuleEngineConfigurationExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__Config
#define SOAP_TYPE_ns2__Config (565)
/* ns2:Config */
struct ns2__Config
{
	struct ns2__ItemList *Parameters;	/* required element of type ns2:ItemList */
	char *Name;	/* required attribute of type xsd:string */
	char *Type;	/* required attribute of type xsd:QName */
};
#endif

#ifndef SOAP_TYPE__ns2__ConfigDescription_Messages
#define SOAP_TYPE__ns2__ConfigDescription_Messages (574)
/* ns2:ConfigDescription-Messages */
struct _ns2__ConfigDescription_Messages
{
	struct ns2__ItemListDescription *Source;	/* optional element of type ns2:ItemListDescription */
	struct ns2__ItemListDescription *Key;	/* optional element of type ns2:ItemListDescription */
	struct ns2__ItemListDescription *Data;	/* optional element of type ns2:ItemListDescription */
	struct ns2__MessageDescriptionExtension *Extension;	/* optional element of type ns2:MessageDescriptionExtension */
	enum xsd__boolean *IsProperty;	/* optional attribute of type xsd:boolean */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
	char *ParentTopic;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns2__ConfigDescription
#define SOAP_TYPE_ns2__ConfigDescription (573)
/* ns2:ConfigDescription */
struct ns2__ConfigDescription
{
	struct ns2__ItemListDescription *Parameters;	/* required element of type ns2:ItemListDescription */
	int __sizeMessages;	/* sequence of elements <Messages> */
	struct _ns2__ConfigDescription_Messages *Messages;	/* optional element of type ns2:ConfigDescription-Messages */
	struct ns2__ConfigDescriptionExtension *Extension;	/* optional element of type ns2:ConfigDescriptionExtension */
	char *Name;	/* required attribute of type xsd:QName */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ConfigDescriptionExtension
#define SOAP_TYPE_ns2__ConfigDescriptionExtension (576)
/* ns2:ConfigDescriptionExtension */
struct ns2__ConfigDescriptionExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__SupportedRules
#define SOAP_TYPE_ns2__SupportedRules (578)
/* ns2:SupportedRules */
struct ns2__SupportedRules
{
	int __sizeRuleContentSchemaLocation;	/* sequence of elements <RuleContentSchemaLocation> */
	char **RuleContentSchemaLocation;	/* optional element of type xsd:anyURI */
	int __sizeRuleDescription;	/* sequence of elements <RuleDescription> */
	struct ns2__ConfigDescription *RuleDescription;	/* optional element of type ns2:ConfigDescription */
	struct ns2__SupportedRulesExtension *Extension;	/* optional element of type ns2:SupportedRulesExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__SupportedRulesExtension
#define SOAP_TYPE_ns2__SupportedRulesExtension (581)
/* ns2:SupportedRulesExtension */
struct ns2__SupportedRulesExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__SupportedAnalyticsModules
#define SOAP_TYPE_ns2__SupportedAnalyticsModules (583)
/* ns2:SupportedAnalyticsModules */
struct ns2__SupportedAnalyticsModules
{
	int __sizeAnalyticsModuleContentSchemaLocation;	/* sequence of elements <AnalyticsModuleContentSchemaLocation> */
	char **AnalyticsModuleContentSchemaLocation;	/* optional element of type xsd:anyURI */
	int __sizeAnalyticsModuleDescription;	/* sequence of elements <AnalyticsModuleDescription> */
	struct ns2__ConfigDescription *AnalyticsModuleDescription;	/* optional element of type ns2:ConfigDescription */
	struct ns2__SupportedAnalyticsModulesExtension *Extension;	/* optional element of type ns2:SupportedAnalyticsModulesExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__SupportedAnalyticsModulesExtension
#define SOAP_TYPE_ns2__SupportedAnalyticsModulesExtension (584)
/* ns2:SupportedAnalyticsModulesExtension */
struct ns2__SupportedAnalyticsModulesExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE__ns2__union_MetadataStream
#define SOAP_TYPE__ns2__union_MetadataStream (596)
/* xsd:choice */
union _ns2__union_MetadataStream
{
#define SOAP_UNION__ns2__union_MetadataStream_VideoAnalytics	(1)
	struct ns2__VideoAnalyticsStream *VideoAnalytics;
#define SOAP_UNION__ns2__union_MetadataStream_PTZ	(2)
	struct ns2__PTZStream *PTZ;
#define SOAP_UNION__ns2__union_MetadataStream_Event	(3)
	struct ns2__EventStream *Event;
#define SOAP_UNION__ns2__union_MetadataStream_Extension	(4)
	struct ns2__MetadataStreamExtension *Extension;
};
#endif

#ifndef SOAP_TYPE___ns2__union_MetadataStream
#define SOAP_TYPE___ns2__union_MetadataStream (587)
/* Operation wrapper: */
struct __ns2__union_MetadataStream
{
	int __union_MetadataStream;	/* union discriminant (of union defined below) */
	union _ns2__union_MetadataStream union_MetadataStream;	/* required element of type xsd:choice */
};
#endif

#ifndef SOAP_TYPE_ns2__MetadataStream
#define SOAP_TYPE_ns2__MetadataStream (586)
/* ns2:MetadataStream */
struct ns2__MetadataStream
{
	int __size_MetadataStream;	/* sequence of elements <-union-MetadataStream> */
	struct __ns2__union_MetadataStream *__union_MetadataStream;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__MetadataStreamExtension
#define SOAP_TYPE_ns2__MetadataStreamExtension (594)
/* ns2:MetadataStreamExtension */
struct ns2__MetadataStreamExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE__ns2__union_VideoAnalyticsStream
#define SOAP_TYPE__ns2__union_VideoAnalyticsStream (602)
/* xsd:choice */
union _ns2__union_VideoAnalyticsStream
{
#define SOAP_UNION__ns2__union_VideoAnalyticsStream_Frame	(1)
	struct ns2__Frame *Frame;
#define SOAP_UNION__ns2__union_VideoAnalyticsStream_Extension	(2)
	struct ns2__VideoAnalyticsStreamExtension *Extension;
};
#endif

#ifndef SOAP_TYPE___ns2__union_VideoAnalyticsStream
#define SOAP_TYPE___ns2__union_VideoAnalyticsStream (598)
/* Operation wrapper: */
struct __ns2__union_VideoAnalyticsStream
{
	int __union_VideoAnalyticsStream;	/* union discriminant (of union defined below) */
	union _ns2__union_VideoAnalyticsStream union_VideoAnalyticsStream;	/* required element of type xsd:choice */
};
#endif

#ifndef SOAP_TYPE_ns2__VideoAnalyticsStream
#define SOAP_TYPE_ns2__VideoAnalyticsStream (588)
/* ns2:VideoAnalyticsStream */
struct ns2__VideoAnalyticsStream
{
	int __size_VideoAnalyticsStream;	/* sequence of elements <-union-VideoAnalyticsStream> */
	struct __ns2__union_VideoAnalyticsStream *__union_VideoAnalyticsStream;
};
#endif

#ifndef SOAP_TYPE_ns2__VideoAnalyticsStreamExtension
#define SOAP_TYPE_ns2__VideoAnalyticsStreamExtension (600)
/* ns2:VideoAnalyticsStreamExtension */
struct ns2__VideoAnalyticsStreamExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE__ns2__union_PTZStream
#define SOAP_TYPE__ns2__union_PTZStream (607)
/* xsd:choice */
union _ns2__union_PTZStream
{
#define SOAP_UNION__ns2__union_PTZStream_PTZStatus	(1)
	struct ns2__PTZStatus *PTZStatus;
#define SOAP_UNION__ns2__union_PTZStream_Extension	(2)
	struct ns2__PTZStreamExtension *Extension;
};
#endif

#ifndef SOAP_TYPE___ns2__union_PTZStream
#define SOAP_TYPE___ns2__union_PTZStream (604)
/* Operation wrapper: */
struct __ns2__union_PTZStream
{
	int __union_PTZStream;	/* union discriminant (of union defined below) */
	union _ns2__union_PTZStream union_PTZStream;	/* required element of type xsd:choice */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZStream
#define SOAP_TYPE_ns2__PTZStream (590)
/* ns2:PTZStream */
struct ns2__PTZStream
{
	int __size_PTZStream;	/* sequence of elements <-union-PTZStream> */
	struct __ns2__union_PTZStream *__union_PTZStream;
};
#endif

#ifndef SOAP_TYPE_ns2__PTZStreamExtension
#define SOAP_TYPE_ns2__PTZStreamExtension (605)
/* ns2:PTZStreamExtension */
struct ns2__PTZStreamExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE__ns2__union_EventStream
#define SOAP_TYPE__ns2__union_EventStream (614)
/* xsd:choice */
union _ns2__union_EventStream
{
#define SOAP_UNION__ns2__union_EventStream_NotificationMessage	(1)
	struct ns2__NotificationMessageHolderType *NotificationMessage;
#define SOAP_UNION__ns2__union_EventStream_Extension	(2)
	struct ns2__EventStreamExtension *Extension;
};
#endif

#ifndef SOAP_TYPE___ns2__union_EventStream
#define SOAP_TYPE___ns2__union_EventStream (609)
/* Operation wrapper: */
struct __ns2__union_EventStream
{
	int __union_EventStream;	/* union discriminant (of union defined below) */
	union _ns2__union_EventStream union_EventStream;	/* required element of type xsd:choice */
};
#endif

#ifndef SOAP_TYPE_ns2__EventStream
#define SOAP_TYPE_ns2__EventStream (592)
/* ns2:EventStream */
struct ns2__EventStream
{
	int __size_EventStream;	/* sequence of elements <-union-EventStream> */
	struct __ns2__union_EventStream *__union_EventStream;
};
#endif

#ifndef SOAP_TYPE_ns2__EventStreamExtension
#define SOAP_TYPE_ns2__EventStreamExtension (612)
/* ns2:EventStreamExtension */
struct ns2__EventStreamExtension
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE_ns2__FilterType
#define SOAP_TYPE_ns2__FilterType (227)
/* ns2:FilterType */
struct ns2__FilterType
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
#endif

#ifndef SOAP_TYPE__ns2__NotificationMessageHolderType_Message
#define SOAP_TYPE__ns2__NotificationMessageHolderType_Message (620)
/* ns2:NotificationMessageHolderType-Message */
struct _ns2__NotificationMessageHolderType_Message
{
	char *__any;
};
#endif

#ifndef SOAP_TYPE_ns2__NotificationMessageHolderType
#define SOAP_TYPE_ns2__NotificationMessageHolderType (610)
/* ns2:NotificationMessageHolderType */
struct ns2__NotificationMessageHolderType
{
	struct ns2__EndpointReferenceType *SubscriptionReference;	/* optional element of type ns2:EndpointReferenceType */
	struct ns2__TopicExpressionType *Topic;	/* optional element of type ns2:TopicExpressionType */
	struct ns2__EndpointReferenceType *ProducerReference;	/* optional element of type ns2:EndpointReferenceType */
	struct _ns2__NotificationMessageHolderType_Message Message;	/* required element of type ns2:NotificationMessageHolderType-Message */
};
#endif

#ifndef SOAP_TYPE_ns2__EndpointReferenceType
#define SOAP_TYPE_ns2__EndpointReferenceType (616)
/* ns2:EndpointReferenceType */
struct ns2__EndpointReferenceType
{
	struct ns2__AttributedURIType *Address;	/* required element of type ns2:AttributedURIType */
	struct ns2__ReferenceParametersType *ReferenceParameters;	/* optional element of type ns2:ReferenceParametersType */
	struct ns2__MetadataType *Metadata;	/* optional element of type ns2:MetadataType */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__ReferenceParametersType
#define SOAP_TYPE_ns2__ReferenceParametersType (623)
/* ns2:ReferenceParametersType */
struct ns2__ReferenceParametersType
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__MetadataType
#define SOAP_TYPE_ns2__MetadataType (625)
/* ns2:MetadataType */
struct ns2__MetadataType
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__TopicExpressionType
#define SOAP_TYPE_ns2__TopicExpressionType (618)
/* ns2:TopicExpressionType */
struct ns2__TopicExpressionType
{
	char *__any;
	char *Dialect;	/* required attribute of type xsd:anyURI */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
	char *__mixed;
};
#endif

#ifndef SOAP_TYPE__ns2__Message
#define SOAP_TYPE__ns2__Message (627)
/* ns2:Message */
struct _ns2__Message
{
	struct ns2__ItemList *Source;	/* optional element of type ns2:ItemList */
	struct ns2__ItemList *Key;	/* optional element of type ns2:ItemList */
	struct ns2__ItemList *Data;	/* optional element of type ns2:ItemList */
	struct ns2__MessageExtension *Extension;	/* optional element of type ns2:MessageExtension */
	time_t UtcTime;	/* required attribute of type xsd:dateTime */
	enum ns2__PropertyOperation *PropertyOperation;	/* optional attribute of type ns2:PropertyOperation */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__VideoSource
#define SOAP_TYPE_ns2__VideoSource (630)
/* ns2:VideoSource */
struct ns2__VideoSource
{
	char *token;	/* required attribute of type ns2:ReferenceToken */
	float Framerate;	/* required element of type xsd:float */
	struct ns2__VideoResolution *Resolution;	/* required element of type ns2:VideoResolution */
	struct ns2__ImagingSettings *Imaging;	/* optional element of type ns2:ImagingSettings */
	struct ns2__VideoSourceExtension *Extension;	/* optional element of type ns2:VideoSourceExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__AudioSource
#define SOAP_TYPE_ns2__AudioSource (633)
/* ns2:AudioSource */
struct ns2__AudioSource
{
	char *token;	/* required attribute of type ns2:ReferenceToken */
	int Channels;	/* required element of type xsd:int */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__VideoSourceConfiguration
#define SOAP_TYPE_ns2__VideoSourceConfiguration (182)
/* ns2:VideoSourceConfiguration */
struct ns2__VideoSourceConfiguration
{
	char *Name;	/* required element of type ns2:Name */
	int UseCount;	/* required element of type xsd:int */
	char *token;	/* required attribute of type ns2:ReferenceToken */
	char *SourceToken;	/* required element of type ns2:ReferenceToken */
	struct ns2__IntRectangle *Bounds;	/* required element of type ns2:IntRectangle */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__VideoEncoderConfiguration
#define SOAP_TYPE_ns2__VideoEncoderConfiguration (163)
/* ns2:VideoEncoderConfiguration */
struct ns2__VideoEncoderConfiguration
{
	char *Name;	/* required element of type ns2:Name */
	int UseCount;	/* required element of type xsd:int */
	char *token;	/* required attribute of type ns2:ReferenceToken */
	enum ns2__VideoEncoding Encoding;	/* required element of type ns2:VideoEncoding */
	struct ns2__VideoResolution *Resolution;	/* required element of type ns2:VideoResolution */
	float Quality;	/* required element of type xsd:float */
	struct ns2__VideoRateControl *RateControl;	/* optional element of type ns2:VideoRateControl */
	struct ns2__Mpeg4Configuration *MPEG4;	/* optional element of type ns2:Mpeg4Configuration */
	struct ns2__H264Configuration *H264;	/* optional element of type ns2:H264Configuration */
	struct ns2__MulticastConfiguration *Multicast;	/* required element of type ns2:MulticastConfiguration */
	LONG64 SessionTimeout;	/* external */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__AudioSourceConfiguration
#define SOAP_TYPE_ns2__AudioSourceConfiguration (184)
/* ns2:AudioSourceConfiguration */
struct ns2__AudioSourceConfiguration
{
	char *Name;	/* required element of type ns2:Name */
	int UseCount;	/* required element of type xsd:int */
	char *token;	/* required attribute of type ns2:ReferenceToken */
	char *SourceToken;	/* required element of type ns2:ReferenceToken */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__AudioEncoderConfiguration
#define SOAP_TYPE_ns2__AudioEncoderConfiguration (186)
/* ns2:AudioEncoderConfiguration */
struct ns2__AudioEncoderConfiguration
{
	char *Name;	/* required element of type ns2:Name */
	int UseCount;	/* required element of type xsd:int */
	char *token;	/* required attribute of type ns2:ReferenceToken */
	enum ns2__AudioEncoding Encoding;	/* required element of type ns2:AudioEncoding */
	int Bitrate;	/* required element of type xsd:int */
	int SampleRate;	/* required element of type xsd:int */
	struct ns2__MulticastConfiguration *Multicast;	/* required element of type ns2:MulticastConfiguration */
	LONG64 SessionTimeout;	/* external */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__VideoAnalyticsConfiguration
#define SOAP_TYPE_ns2__VideoAnalyticsConfiguration (188)
/* ns2:VideoAnalyticsConfiguration */
struct ns2__VideoAnalyticsConfiguration
{
	char *Name;	/* required element of type ns2:Name */
	int UseCount;	/* required element of type xsd:int */
	char *token;	/* required attribute of type ns2:ReferenceToken */
	struct ns2__AnalyticsEngineConfiguration *AnalyticsEngineConfiguration;	/* required element of type ns2:AnalyticsEngineConfiguration */
	struct ns2__RuleEngineConfiguration *RuleEngineConfiguration;	/* required element of type ns2:RuleEngineConfiguration */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__MetadataConfiguration
#define SOAP_TYPE_ns2__MetadataConfiguration (192)
/* ns2:MetadataConfiguration */
struct ns2__MetadataConfiguration
{
	char *Name;	/* required element of type ns2:Name */
	int UseCount;	/* required element of type xsd:int */
	char *token;	/* required attribute of type ns2:ReferenceToken */
	struct ns2__PTZFilter *PTZStatus;	/* optional element of type ns2:PTZFilter */
	struct ns2__EventSubscription *Events;	/* optional element of type ns2:EventSubscription */
	enum xsd__boolean *Analytics;	/* optional element of type xsd:boolean */
	struct ns2__MulticastConfiguration *Multicast;	/* required element of type ns2:MulticastConfiguration */
	LONG64 SessionTimeout;	/* external */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__NetworkInterface
#define SOAP_TYPE_ns2__NetworkInterface (643)
/* ns2:NetworkInterface */
struct ns2__NetworkInterface
{
	char *token;	/* required attribute of type ns2:ReferenceToken */
	enum xsd__boolean Enabled;	/* required element of type xsd:boolean */
	struct ns2__NetworkInterfaceInfo *Info;	/* optional element of type ns2:NetworkInterfaceInfo */
	struct ns2__NetworkInterfaceLink *Link;	/* optional element of type ns2:NetworkInterfaceLink */
	struct ns2__IPv4NetworkInterface *IPv4;	/* optional element of type ns2:IPv4NetworkInterface */
	struct ns2__IPv6NetworkInterface *IPv6;	/* optional element of type ns2:IPv6NetworkInterface */
	struct ns2__NetworkInterfaceExtension *Extension;	/* optional element of type ns2:NetworkInterfaceExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__RelayOutput
#define SOAP_TYPE_ns2__RelayOutput (649)
/* ns2:RelayOutput */
struct ns2__RelayOutput
{
	char *token;	/* required attribute of type ns2:ReferenceToken */
	struct ns2__RelayOutputSettings *Properties;	/* required element of type ns2:RelayOutputSettings */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZNode
#define SOAP_TYPE_ns2__PTZNode (651)
/* ns2:PTZNode */
struct ns2__PTZNode
{
	char *token;	/* required attribute of type ns2:ReferenceToken */
	char *Name;	/* optional element of type ns2:Name */
	struct ns2__PTZSpaces *SupportedPTZSpaces;	/* required element of type ns2:PTZSpaces */
	int MaximumNumberOfPresets;	/* required element of type xsd:int */
	enum xsd__boolean HomeSupported;	/* required element of type xsd:boolean */
	int __sizeAuxiliaryCommands;	/* sequence of elements <AuxiliaryCommands> */
	char **AuxiliaryCommands;	/* optional element of type ns2:AuxiliaryData */
	struct ns2__PTZNodeExtension *Extension;	/* optional element of type ns2:PTZNodeExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__PTZConfiguration
#define SOAP_TYPE_ns2__PTZConfiguration (190)
/* ns2:PTZConfiguration */
struct ns2__PTZConfiguration
{
	char *Name;	/* required element of type ns2:Name */
	int UseCount;	/* required element of type xsd:int */
	char *token;	/* required attribute of type ns2:ReferenceToken */
	char *NodeToken;	/* required element of type ns2:ReferenceToken */
	char *DefaultAbsolutePantTiltPositionSpace;	/* optional element of type xsd:anyURI */
	char *DefaultAbsoluteZoomPositionSpace;	/* optional element of type xsd:anyURI */
	char *DefaultRelativePanTiltTranslationSpace;	/* optional element of type xsd:anyURI */
	char *DefaultRelativeZoomTranslationSpace;	/* optional element of type xsd:anyURI */
	char *DefaultContinuousPanTiltVelocitySpace;	/* optional element of type xsd:anyURI */
	char *DefaultContinuousZoomVelocitySpace;	/* optional element of type xsd:anyURI */
	struct ns2__PTZSpeed *DefaultPTZSpeed;	/* optional element of type ns2:PTZSpeed */
	LONG64 *DefaultPTZTimeout;	/* optional element of type xsd:duration */
	struct ns2__PanTiltLimits *PanTiltLimits;	/* optional element of type ns2:PanTiltLimits */
	struct ns2__ZoomLimits *ZoomLimits;	/* optional element of type ns2:ZoomLimits */
	struct ns2__PTZConfigurationExtension *Extension;	/* optional element of type ns2:PTZConfigurationExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__Object
#define SOAP_TYPE_ns2__Object (541)
/* ns2:Object */
struct ns2__Object
{
	char *ObjectId;	/* optional attribute of type xsd:integer */
	struct ns2__Appearance *Appearance;	/* optional element of type ns2:Appearance */
	struct ns2__Behaviour *Behaviour;	/* optional element of type ns2:Behaviour */
	struct ns2__ObjectExtension *Extension;	/* optional element of type ns2:ObjectExtension */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_ns2__AttributedURIType
#define SOAP_TYPE_ns2__AttributedURIType (621)
/* Primitive ns2:AttributedURIType schema type: */
struct ns2__AttributedURIType
{
	char *__item;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE___ns1__GetProfiles
#define SOAP_TYPE___ns1__GetProfiles (664)
/* Operation wrapper: */
struct __ns1__GetProfiles
{
	struct _ns1__GetProfiles *ns1__GetProfiles;	/* optional element of type ns1:GetProfiles */
};
#endif

#ifndef SOAP_TYPE___ns1__GetStreamUri
#define SOAP_TYPE___ns1__GetStreamUri (668)
/* Operation wrapper: */
struct __ns1__GetStreamUri
{
	struct _ns1__GetStreamUri *ns1__GetStreamUri;	/* optional element of type ns1:GetStreamUri */
};
#endif

#ifndef SOAP_TYPE___ns1__GetVideoEncoderConfigurationOptions
#define SOAP_TYPE___ns1__GetVideoEncoderConfigurationOptions (672)
/* Operation wrapper: */
struct __ns1__GetVideoEncoderConfigurationOptions
{
	struct _ns1__GetVideoEncoderConfigurationOptions *ns1__GetVideoEncoderConfigurationOptions;	/* optional element of type ns1:GetVideoEncoderConfigurationOptions */
};
#endif

#ifndef SOAP_TYPE___ns1__SetVideoEncoderConfiguration
#define SOAP_TYPE___ns1__SetVideoEncoderConfiguration (676)
/* Operation wrapper: */
struct __ns1__SetVideoEncoderConfiguration
{
	struct _ns1__SetVideoEncoderConfiguration *ns1__SetVideoEncoderConfiguration;	/* optional element of type ns1:SetVideoEncoderConfiguration */
};
#endif

#ifndef SOAP_TYPE___ns1__GetSnapshotUri
#define SOAP_TYPE___ns1__GetSnapshotUri (680)
/* Operation wrapper: */
struct __ns1__GetSnapshotUri
{
	struct _ns1__GetSnapshotUri *ns1__GetSnapshotUri;	/* optional element of type ns1:GetSnapshotUri */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (681)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (683)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (686)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (687)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__ds__Signature
#define SOAP_TYPE__ds__Signature (26)
typedef struct ds__SignatureType _ds__Signature;
#endif

#ifndef SOAP_TYPE__ds__Transform
#define SOAP_TYPE__ds__Transform (34)
typedef struct ds__TransformType _ds__Transform;
#endif

#ifndef SOAP_TYPE__ds__KeyInfo
#define SOAP_TYPE__ds__KeyInfo (43)
typedef struct ds__KeyInfoType _ds__KeyInfo;
#endif

#ifndef SOAP_TYPE_xsd__anySimpleType
#define SOAP_TYPE_xsd__anySimpleType (93)
typedef char *xsd__anySimpleType;
#endif

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (94)
typedef char *xsd__anyURI;
#endif

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (101)
typedef char *xsd__integer;
#endif

#ifndef SOAP_TYPE_xsd__token
#define SOAP_TYPE_xsd__token (102)
typedef char *xsd__token;
#endif

#ifndef SOAP_TYPE_ns2__ReferenceToken
#define SOAP_TYPE_ns2__ReferenceToken (104)
typedef char *ns2__ReferenceToken;
#endif

#ifndef SOAP_TYPE_ns2__Name
#define SOAP_TYPE_ns2__Name (105)
typedef char *ns2__Name;
#endif

#ifndef SOAP_TYPE_ns2__IANA_IfTypes
#define SOAP_TYPE_ns2__IANA_IfTypes (115)
typedef int ns2__IANA_IfTypes;
#endif

#ifndef SOAP_TYPE_ns2__IPv4Address
#define SOAP_TYPE_ns2__IPv4Address (119)
typedef char *ns2__IPv4Address;
#endif

#ifndef SOAP_TYPE_ns2__IPv6Address
#define SOAP_TYPE_ns2__IPv6Address (120)
typedef char *ns2__IPv6Address;
#endif

#ifndef SOAP_TYPE_ns2__HwAddress
#define SOAP_TYPE_ns2__HwAddress (121)
typedef char *ns2__HwAddress;
#endif

#ifndef SOAP_TYPE_ns2__DNSName
#define SOAP_TYPE_ns2__DNSName (123)
typedef char *ns2__DNSName;
#endif

#ifndef SOAP_TYPE_ns2__Domain
#define SOAP_TYPE_ns2__Domain (124)
typedef char *ns2__Domain;
#endif

#ifndef SOAP_TYPE_ns2__AuxiliaryData
#define SOAP_TYPE_ns2__AuxiliaryData (134)
typedef char *ns2__AuxiliaryData;
#endif

#ifndef SOAP_TYPE_ns2__TopicNamespaceLocation
#define SOAP_TYPE_ns2__TopicNamespaceLocation (144)
typedef char *ns2__TopicNamespaceLocation;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetProfiles(struct soap*, struct _ns1__GetProfiles *ns1__GetProfiles, struct _ns1__GetProfilesResponse *ns1__GetProfilesResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetStreamUri(struct soap*, struct _ns1__GetStreamUri *ns1__GetStreamUri, struct _ns1__GetStreamUriResponse *ns1__GetStreamUriResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetVideoEncoderConfigurationOptions(struct soap*, struct _ns1__GetVideoEncoderConfigurationOptions *ns1__GetVideoEncoderConfigurationOptions, struct _ns1__GetVideoEncoderConfigurationOptionsResponse *ns1__GetVideoEncoderConfigurationOptionsResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__SetVideoEncoderConfiguration(struct soap*, struct _ns1__SetVideoEncoderConfiguration *ns1__SetVideoEncoderConfiguration, struct _ns1__SetVideoEncoderConfigurationResponse *ns1__SetVideoEncoderConfigurationResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetSnapshotUri(struct soap*, struct _ns1__GetSnapshotUri *ns1__GetSnapshotUri, struct _ns1__GetSnapshotUriResponse *ns1__GetSnapshotUriResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetProfiles(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetStreamUri(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetVideoEncoderConfigurationOptions(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__SetVideoEncoderConfiguration(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetSnapshotUri(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__GetProfiles *ns1__GetProfiles, struct _ns1__GetProfilesResponse *ns1__GetProfilesResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetStreamUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__GetStreamUri *ns1__GetStreamUri, struct _ns1__GetStreamUriResponse *ns1__GetStreamUriResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetVideoEncoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__GetVideoEncoderConfigurationOptions *ns1__GetVideoEncoderConfigurationOptions, struct _ns1__GetVideoEncoderConfigurationOptionsResponse *ns1__GetVideoEncoderConfigurationOptionsResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SetVideoEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__SetVideoEncoderConfiguration *ns1__SetVideoEncoderConfiguration, struct _ns1__SetVideoEncoderConfigurationResponse *ns1__SetVideoEncoderConfigurationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetSnapshotUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__GetSnapshotUri *ns1__GetSnapshotUri, struct _ns1__GetSnapshotUriResponse *ns1__GetSnapshotUriResponse);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
